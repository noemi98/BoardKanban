{
    "sourceFile": "src/assets/components/Board.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1723586024118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1723586240447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,19 @@\n-import React, { useState, useEffect } from 'react';\r\n+import React, { useState } from 'react';\r\n+import { Modal } from './Modal';\r\n \r\n export const Board = ({ categoryNames, assignedTasks, handlePlusClick, handleTaskRemove, handleTaskMoveToNext, toggleModalCatOpen }) => {\r\n+   const [isCategoryModalOpen, setCategoryModalOpen] = useState(false);\r\n+\r\n+   const handleCategoryModalToggle = () => {\r\n+      setCategoryModalOpen(!isCategoryModalOpen);\r\n+   };\r\n+\r\n    return (\r\n       <div className=\"column\" id=\"panel-board\">\r\n          <div className=\"box header\">\r\n             <h2 className=\"title\">Tablero Kanban</h2>\r\n-            <button className=\"button is-primary\" onClick={toggleModalCatOpen}>Crear</button>\r\n+            <button className=\"button is-primary\" onClick={handleCategoryModalToggle}>Crear</button>\r\n          </div>\r\n          <div className='box tableroKanban'>\r\n             <div className=\"table-container is-fullwidth\">\r\n                <table className=\"table is-fullwidth table-kanban\">\r\n@@ -52,7 +59,24 @@\n                   </tbody>\r\n                </table>\r\n             </div>\r\n          </div>\r\n+         {isCategoryModalOpen && (\r\n+            <Modal onClose={handleCategoryModalToggle}>\r\n+               <header className=\"modal-card-head\">\r\n+                  <p className=\"modal-card-title\">Nueva Categoría</p>\r\n+                  <button className=\"delete\" aria-label=\"close\" onClick={handleCategoryModalToggle}></button>\r\n+               </header>\r\n+               <section className=\"modal-card-body\">\r\n+                  {/* Contenido del modal de categorías */}\r\n+                  <label className=\"label\">Nombre de Categoría:</label>\r\n+                  <input className=\"input\" type=\"text\" />\r\n+               </section>\r\n+               <footer className=\"modal-card-foot\">\r\n+                  <button className=\"button is-success\">Guardar</button>\r\n+                  <button className=\"button\" onClick={handleCategoryModalToggle}>Cancelar</button>\r\n+               </footer>\r\n+            </Modal>\r\n+         )}\r\n       </div>\r\n    );\r\n }\r\n"
                },
                {
                    "date": 1723586438597,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,105 @@\n+import React, { useState } from 'react';\r\n+import { Modal } from './Modal';\r\n+\r\n+export const Board = ({ categoryNames, assignedTasks, handlePlusClick, handleTaskRemove, handleTaskMoveToNext, toggleModalCatOpen }) => {\r\n+   const [isCategoryModalOpen, setCategoryModalOpen] = useState(false);\r\n+\r\n+   const handleCategoryModalToggle = () => {\r\n+      setCategoryModalOpen(!isCategoryModalOpen);\r\n+   };\r\n+\r\n+   return (\r\n+      <div className=\"column\" id=\"panel-board\">\r\n+         <div className=\"box header\">\r\n+            <h2 className=\"title\">Tablero Kanban</h2>\r\n+            <button className=\"button is-primary\" onClick={handleCategoryModalToggle}>Crear</button>\r\n+         </div>\r\n+         <div className='box tableroKanban'>\r\n+            <div className=\"table-container is-fullwidth\">\r\n+               <table className=\"table is-fullwidth table-kanban\">\r\n+                  <thead>\r\n+                     <tr>\r\n+                        {categoryNames.map((name, index) => (\r\n+                           <th key={index} style={{\r\n+                              textAlign: 'center',\r\n+                              backgroundColor: '#EBECF0',\r\n+                              height: '30px',\r\n+                              verticalAlign: 'middle'\r\n+                           }}>\r\n+                              {name || `Categoría ${index + 1}`}\r\n+                           </th>\r\n+                        ))}\r\n+                     </tr>\r\n+                  </thead>\r\n+                  <tbody>\r\n+                     <tr>\r\n+                        {categoryNames.map((_, index) => (\r\n+                           <td key={index} style={{ height: '80vh', textAlign: 'center' }}>\r\n+                              <div className='pb-4'>\r\n+                                 <button className=\"button is-primary is-rounded is-small\" id=\"plus\" style={{ opacity: 0.7 }} onClick={() => handlePlusClick(index)}>\r\n+                                    <span className='has-text-primary-20-invert'>+</span>\r\n+                                 </button>\r\n+                              </div>\r\n+                              {assignedTasks[index] && assignedTasks[index].map((task, taskIndex) => (\r\n+                                 <div\r\n+                                    key={taskIndex}\r\n+                                    className='task-box-2'\r\n+                                    onClick={() => handleTaskRemove(task, index)}\r\n+                                    onContextMenu={(e) => {\r\n+                                       e.preventDefault();\r\n+                                       handleTaskMoveToNext(task, index);\r\n+                                    }}\r\n+                                 >\r\n+                                    <span className='subtitle is-6'>{task.title}</span>\r\n+                                 </div>\r\n+                              ))}\r\n+                           </td>\r\n+                        ))}\r\n+                     </tr>\r\n+                  </tbody>\r\n+               </table>\r\n+            </div>\r\n+         </div>\r\n+         {isCategoryModalOpen && (\r\n+            <Modal onClose={handleCategoryModalToggle}>\r\n+               <header className=\"modal-card-head\">\r\n+                  <p className=\"modal-card-title\">Nueva Categoría</p>\r\n+                  <button className=\"delete\" aria-label=\"close\" onClick={handleCategoryModalToggle}></button>\r\n+               </header>\r\n+               <section className=\"modal-card-body\">\r\n+                     <div className=\"field\">\r\n+                        <label className=\"label\">Cantidad de Categorías</label>\r\n+                        <div className=\"control\">\r\n+                           <input\r\n+                              className=\"input\"\r\n+                              type=\"number\"\r\n+                              value={categoryCount}\r\n+                              onChange={handleCategoryCountChange}\r\n+                              min=\"3\"\r\n+                           />\r\n+                        </div>\r\n+                     </div>\r\n+                     {categoryNames.map((name, index) => (\r\n+                        <div key={index} className=\"field\">\r\n+                           <label className=\"label\">{`Nombre de Categoría ${index + 1}`}</label>\r\n+                           <div className=\"control\">\r\n+                              <input\r\n+                                 className=\"input\"\r\n+                                 type=\"text\"\r\n+                                 value={name}\r\n+                                 onChange={(event) => handleCategoryNameChange(index, event)}\r\n+                                 placeholder={`Categoría ${index + 1}`}\r\n+                              />\r\n+                           </div>\r\n+                        </div>\r\n+                     ))}\r\n+                  </section>\r\n+               <footer className=\"modal-card-foot\">\r\n+                  <button className=\"button is-success\">Guardar</button>\r\n+                  <button className=\"button\" onClick={handleCategoryModalToggle}>Cancelar</button>\r\n+               </footer>\r\n+            </Modal>\r\n+         )}\r\n+      </div>\r\n+   );\r\n+}\r\n"
                },
                {
                    "date": 1723586462597,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,94 +93,16 @@\n                            </div>\r\n                         </div>\r\n                      ))}\r\n                   </section>\r\n-               <footer className=\"modal-card-foot\">\r\n+               {/* <footer className=\"modal-card-foot\">\r\n                   <button className=\"button is-success\">Guardar</button>\r\n                   <button className=\"button\" onClick={handleCategoryModalToggle}>Cancelar</button>\r\n-               </footer>\r\n-            </Modal>\r\n-         )}\r\n-      </div>\r\n-   );\r\n-}\r\n-import React, { useState } from 'react';\r\n-import { Modal } from './Modal';\r\n-\r\n-export const Board = ({ categoryNames, assignedTasks, handlePlusClick, handleTaskRemove, handleTaskMoveToNext, toggleModalCatOpen }) => {\r\n-   const [isCategoryModalOpen, setCategoryModalOpen] = useState(false);\r\n-\r\n-   const handleCategoryModalToggle = () => {\r\n-      setCategoryModalOpen(!isCategoryModalOpen);\r\n-   };\r\n-\r\n-   return (\r\n-      <div className=\"column\" id=\"panel-board\">\r\n-         <div className=\"box header\">\r\n-            <h2 className=\"title\">Tablero Kanban</h2>\r\n-            <button className=\"button is-primary\" onClick={handleCategoryModalToggle}>Crear</button>\r\n-         </div>\r\n-         <div className='box tableroKanban'>\r\n-            <div className=\"table-container is-fullwidth\">\r\n-               <table className=\"table is-fullwidth table-kanban\">\r\n-                  <thead>\r\n-                     <tr>\r\n-                        {categoryNames.map((name, index) => (\r\n-                           <th key={index} style={{\r\n-                              textAlign: 'center',\r\n-                              backgroundColor: '#EBECF0',\r\n-                              height: '30px',\r\n-                              verticalAlign: 'middle'\r\n-                           }}>\r\n-                              {name || `Categoría ${index + 1}`}\r\n-                           </th>\r\n-                        ))}\r\n-                     </tr>\r\n-                  </thead>\r\n-                  <tbody>\r\n-                     <tr>\r\n-                        {categoryNames.map((_, index) => (\r\n-                           <td key={index} style={{ height: '80vh', textAlign: 'center' }}>\r\n-                              <div className='pb-4'>\r\n-                                 <button className=\"button is-primary is-rounded is-small\" id=\"plus\" style={{ opacity: 0.7 }} onClick={() => handlePlusClick(index)}>\r\n-                                    <span className='has-text-primary-20-invert'>+</span>\r\n-                                 </button>\r\n-                              </div>\r\n-                              {assignedTasks[index] && assignedTasks[index].map((task, taskIndex) => (\r\n-                                 <div\r\n-                                    key={taskIndex}\r\n-                                    className='task-box-2'\r\n-                                    onClick={() => handleTaskRemove(task, index)}\r\n-                                    onContextMenu={(e) => {\r\n-                                       e.preventDefault();\r\n-                                       handleTaskMoveToNext(task, index);\r\n-                                    }}\r\n-                                 >\r\n-                                    <span className='subtitle is-6'>{task.title}</span>\r\n-                                 </div>\r\n-                              ))}\r\n-                           </td>\r\n-                        ))}\r\n-                     </tr>\r\n-                  </tbody>\r\n-               </table>\r\n-            </div>\r\n-         </div>\r\n-         {isCategoryModalOpen && (\r\n-            <Modal onClose={handleCategoryModalToggle}>\r\n-               <header className=\"modal-card-head\">\r\n-                  <p className=\"modal-card-title\">Nueva Categoría</p>\r\n-                  <button className=\"delete\" aria-label=\"close\" onClick={handleCategoryModalToggle}></button>\r\n-               </header>\r\n-               <section className=\"modal-card-body\">\r\n-                  {/* Contenido del modal de categorías */}\r\n-                  <label className=\"label\">Nombre de Categoría:</label>\r\n-                  <input className=\"input\" type=\"text\" />\r\n-               </section>\r\n+               </footer> */}\r\n                <footer className=\"modal-card-foot\">\r\n-                  <button className=\"button is-success\">Guardar</button>\r\n-                  <button className=\"button\" onClick={handleCategoryModalToggle}>Cancelar</button>\r\n-               </footer>\r\n+                     <button className=\"button is-success\" onClick={handleCreateBoard}>Crear</button>\r\n+                     <button className=\"button\" onClick={toggleModalCatOpen}>Cancelar</button>\r\n+                  </footer>\r\n             </Modal>\r\n          )}\r\n       </div>\r\n    );\r\n"
                },
                {
                    "date": 1723586510967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,12 +97,12 @@\n                {/* <footer className=\"modal-card-foot\">\r\n                   <button className=\"button is-success\">Guardar</button>\r\n                   <button className=\"button\" onClick={handleCategoryModalToggle}>Cancelar</button>\r\n                </footer> */}\r\n-               <footer className=\"modal-card-foot\">\r\n+               {/* <footer className=\"modal-card-foot\">\r\n                      <button className=\"button is-success\" onClick={handleCreateBoard}>Crear</button>\r\n                      <button className=\"button\" onClick={toggleModalCatOpen}>Cancelar</button>\r\n-                  </footer>\r\n+                  </footer> */}\r\n             </Modal>\r\n          )}\r\n       </div>\r\n    );\r\n"
                },
                {
                    "date": 1723586532827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,14 @@\n    const handleCategoryModalToggle = () => {\r\n       setCategoryModalOpen(!isCategoryModalOpen);\r\n    };\r\n \r\n+   const handleCategoryNameChange = (index, event) => {\r\n+      const newCategories = [...categoryNames];\r\n+      newCategories[index] = event.target.value;\r\n+      setCategoryNames(newCategories);\r\n+   };\r\n+\r\n    return (\r\n       <div className=\"column\" id=\"panel-board\">\r\n          <div className=\"box header\">\r\n             <h2 className=\"title\">Tablero Kanban</h2>\r\n"
                },
                {
                    "date": 1723586585727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,135 @@\n+import React, { useState } from 'react';\r\n+import { Modal } from './Modal';\r\n+\r\n+export const Board = ({ categoryNames, assignedTasks, handlePlusClick, handleTaskRemove, handleTaskMoveToNext, toggleModalCatOpen }) => {\r\n+   const [isCategoryModalOpen, setCategoryModalOpen] = useState(false);\r\n+\r\n+   const handleCategoryModalToggle = () => {\r\n+      setCategoryModalOpen(!isCategoryModalOpen);\r\n+   };\r\n+\r\n+   // Para las categorías del tablero\r\n+   const [categoryCount, setCategoryCount] = useState(3);\r\n+   const [categoryNames, setCategoryNames] = useState([\"Por hacer\", \"En proceso\", \"Hecho\"]);\r\n+\r\n+   const handleCategoryCountChange = (event) => {\r\n+      const count = parseInt(event.target.value, 10);\r\n+\r\n+      setCategoryCount(count);\r\n+\r\n+      if (count > categoryNames.length) {\r\n+         const newCategories = [...categoryNames];\r\n+         while (newCategories.length < count) {\r\n+            newCategories.push(\"\");\r\n+         }\r\n+         setCategoryNames(newCategories);\r\n+      } else if (count < categoryNames.length) {\r\n+         setCategoryNames(categoryNames.slice(0, count));\r\n+      }\r\n+   };\r\n+\r\n+   const handleCategoryNameChange = (index, event) => {\r\n+      const newCategories = [...categoryNames];\r\n+      newCategories[index] = event.target.value;\r\n+      setCategoryNames(newCategories);\r\n+   };\r\n+\r\n+   return (\r\n+      <div className=\"column\" id=\"panel-board\">\r\n+         <div className=\"box header\">\r\n+            <h2 className=\"title\">Tablero Kanban</h2>\r\n+            <button className=\"button is-primary\" onClick={handleCategoryModalToggle}>Crear</button>\r\n+         </div>\r\n+         <div className='box tableroKanban'>\r\n+            <div className=\"table-container is-fullwidth\">\r\n+               <table className=\"table is-fullwidth table-kanban\">\r\n+                  <thead>\r\n+                     <tr>\r\n+                        {categoryNames.map((name, index) => (\r\n+                           <th key={index} style={{\r\n+                              textAlign: 'center',\r\n+                              backgroundColor: '#EBECF0',\r\n+                              height: '30px',\r\n+                              verticalAlign: 'middle'\r\n+                           }}>\r\n+                              {name || `Categoría ${index + 1}`}\r\n+                           </th>\r\n+                        ))}\r\n+                     </tr>\r\n+                  </thead>\r\n+                  <tbody>\r\n+                     <tr>\r\n+                        {categoryNames.map((_, index) => (\r\n+                           <td key={index} style={{ height: '80vh', textAlign: 'center' }}>\r\n+                              <div className='pb-4'>\r\n+                                 <button className=\"button is-primary is-rounded is-small\" id=\"plus\" style={{ opacity: 0.7 }} onClick={() => handlePlusClick(index)}>\r\n+                                    <span className='has-text-primary-20-invert'>+</span>\r\n+                                 </button>\r\n+                              </div>\r\n+                              {assignedTasks[index] && assignedTasks[index].map((task, taskIndex) => (\r\n+                                 <div\r\n+                                    key={taskIndex}\r\n+                                    className='task-box-2'\r\n+                                    onClick={() => handleTaskRemove(task, index)}\r\n+                                    onContextMenu={(e) => {\r\n+                                       e.preventDefault();\r\n+                                       handleTaskMoveToNext(task, index);\r\n+                                    }}\r\n+                                 >\r\n+                                    <span className='subtitle is-6'>{task.title}</span>\r\n+                                 </div>\r\n+                              ))}\r\n+                           </td>\r\n+                        ))}\r\n+                     </tr>\r\n+                  </tbody>\r\n+               </table>\r\n+            </div>\r\n+         </div>\r\n+         {isCategoryModalOpen && (\r\n+            <Modal onClose={handleCategoryModalToggle}>\r\n+               <header className=\"modal-card-head\">\r\n+                  <p className=\"modal-card-title\">Nueva Categoría</p>\r\n+                  <button className=\"delete\" aria-label=\"close\" onClick={handleCategoryModalToggle}></button>\r\n+               </header>\r\n+               <section className=\"modal-card-body\">\r\n+                     <div className=\"field\">\r\n+                        <label className=\"label\">Cantidad de Categorías</label>\r\n+                        <div className=\"control\">\r\n+                           <input\r\n+                              className=\"input\"\r\n+                              type=\"number\"\r\n+                              value={categoryCount}\r\n+                              onChange={handleCategoryCountChange}\r\n+                              min=\"3\"\r\n+                           />\r\n+                        </div>\r\n+                     </div>\r\n+                     {categoryNames.map((name, index) => (\r\n+                        <div key={index} className=\"field\">\r\n+                           <label className=\"label\">{`Nombre de Categoría ${index + 1}`}</label>\r\n+                           <div className=\"control\">\r\n+                              <input\r\n+                                 className=\"input\"\r\n+                                 type=\"text\"\r\n+                                 value={name}\r\n+                                 onChange={(event) => handleCategoryNameChange(index, event)}\r\n+                                 placeholder={`Categoría ${index + 1}`}\r\n+                              />\r\n+                           </div>\r\n+                        </div>\r\n+                     ))}\r\n+                  </section>\r\n+               {/* <footer className=\"modal-card-foot\">\r\n+                  <button className=\"button is-success\">Guardar</button>\r\n+                  <button className=\"button\" onClick={handleCategoryModalToggle}>Cancelar</button>\r\n+               </footer> */}\r\n+               {/* <footer className=\"modal-card-foot\">\r\n+                     <button className=\"button is-success\" onClick={handleCreateBoard}>Crear</button>\r\n+                     <button className=\"button\" onClick={toggleModalCatOpen}>Cancelar</button>\r\n+                  </footer> */}\r\n+            </Modal>\r\n+         )}\r\n+      </div>\r\n+   );\r\n+}\r\n"
                },
                {
                    "date": 1723586593610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,119 +132,4 @@\n          )}\r\n       </div>\r\n    );\r\n }\r\n-import React, { useState } from 'react';\r\n-import { Modal } from './Modal';\r\n-\r\n-export const Board = ({ categoryNames, assignedTasks, handlePlusClick, handleTaskRemove, handleTaskMoveToNext, toggleModalCatOpen }) => {\r\n-   const [isCategoryModalOpen, setCategoryModalOpen] = useState(false);\r\n-\r\n-   const handleCategoryModalToggle = () => {\r\n-      setCategoryModalOpen(!isCategoryModalOpen);\r\n-   };\r\n-\r\n-   const handleCategoryNameChange = (index, event) => {\r\n-      const newCategories = [...categoryNames];\r\n-      newCategories[index] = event.target.value;\r\n-      setCategoryNames(newCategories);\r\n-   };\r\n-\r\n-   return (\r\n-      <div className=\"column\" id=\"panel-board\">\r\n-         <div className=\"box header\">\r\n-            <h2 className=\"title\">Tablero Kanban</h2>\r\n-            <button className=\"button is-primary\" onClick={handleCategoryModalToggle}>Crear</button>\r\n-         </div>\r\n-         <div className='box tableroKanban'>\r\n-            <div className=\"table-container is-fullwidth\">\r\n-               <table className=\"table is-fullwidth table-kanban\">\r\n-                  <thead>\r\n-                     <tr>\r\n-                        {categoryNames.map((name, index) => (\r\n-                           <th key={index} style={{\r\n-                              textAlign: 'center',\r\n-                              backgroundColor: '#EBECF0',\r\n-                              height: '30px',\r\n-                              verticalAlign: 'middle'\r\n-                           }}>\r\n-                              {name || `Categoría ${index + 1}`}\r\n-                           </th>\r\n-                        ))}\r\n-                     </tr>\r\n-                  </thead>\r\n-                  <tbody>\r\n-                     <tr>\r\n-                        {categoryNames.map((_, index) => (\r\n-                           <td key={index} style={{ height: '80vh', textAlign: 'center' }}>\r\n-                              <div className='pb-4'>\r\n-                                 <button className=\"button is-primary is-rounded is-small\" id=\"plus\" style={{ opacity: 0.7 }} onClick={() => handlePlusClick(index)}>\r\n-                                    <span className='has-text-primary-20-invert'>+</span>\r\n-                                 </button>\r\n-                              </div>\r\n-                              {assignedTasks[index] && assignedTasks[index].map((task, taskIndex) => (\r\n-                                 <div\r\n-                                    key={taskIndex}\r\n-                                    className='task-box-2'\r\n-                                    onClick={() => handleTaskRemove(task, index)}\r\n-                                    onContextMenu={(e) => {\r\n-                                       e.preventDefault();\r\n-                                       handleTaskMoveToNext(task, index);\r\n-                                    }}\r\n-                                 >\r\n-                                    <span className='subtitle is-6'>{task.title}</span>\r\n-                                 </div>\r\n-                              ))}\r\n-                           </td>\r\n-                        ))}\r\n-                     </tr>\r\n-                  </tbody>\r\n-               </table>\r\n-            </div>\r\n-         </div>\r\n-         {isCategoryModalOpen && (\r\n-            <Modal onClose={handleCategoryModalToggle}>\r\n-               <header className=\"modal-card-head\">\r\n-                  <p className=\"modal-card-title\">Nueva Categoría</p>\r\n-                  <button className=\"delete\" aria-label=\"close\" onClick={handleCategoryModalToggle}></button>\r\n-               </header>\r\n-               <section className=\"modal-card-body\">\r\n-                     <div className=\"field\">\r\n-                        <label className=\"label\">Cantidad de Categorías</label>\r\n-                        <div className=\"control\">\r\n-                           <input\r\n-                              className=\"input\"\r\n-                              type=\"number\"\r\n-                              value={categoryCount}\r\n-                              onChange={handleCategoryCountChange}\r\n-                              min=\"3\"\r\n-                           />\r\n-                        </div>\r\n-                     </div>\r\n-                     {categoryNames.map((name, index) => (\r\n-                        <div key={index} className=\"field\">\r\n-                           <label className=\"label\">{`Nombre de Categoría ${index + 1}`}</label>\r\n-                           <div className=\"control\">\r\n-                              <input\r\n-                                 className=\"input\"\r\n-                                 type=\"text\"\r\n-                                 value={name}\r\n-                                 onChange={(event) => handleCategoryNameChange(index, event)}\r\n-                                 placeholder={`Categoría ${index + 1}`}\r\n-                              />\r\n-                           </div>\r\n-                        </div>\r\n-                     ))}\r\n-                  </section>\r\n-               {/* <footer className=\"modal-card-foot\">\r\n-                  <button className=\"button is-success\">Guardar</button>\r\n-                  <button className=\"button\" onClick={handleCategoryModalToggle}>Cancelar</button>\r\n-               </footer> */}\r\n-               {/* <footer className=\"modal-card-foot\">\r\n-                     <button className=\"button is-success\" onClick={handleCreateBoard}>Crear</button>\r\n-                     <button className=\"button\" onClick={toggleModalCatOpen}>Cancelar</button>\r\n-                  </footer> */}\r\n-            </Modal>\r\n-         )}\r\n-      </div>\r\n-   );\r\n-}\r\n"
                },
                {
                    "date": 1723586613990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,8 @@\n    };\r\n \r\n    // Para las categorías del tablero\r\n    const [categoryCount, setCategoryCount] = useState(3);\r\n-   const [categoryNames, setCategoryNames] = useState([\"Por hacer\", \"En proceso\", \"Hecho\"]);\r\n \r\n    const handleCategoryCountChange = (event) => {\r\n       const count = parseInt(event.target.value, 10);\r\n \r\n"
                }
            ],
            "date": 1723586024118,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\n\r\nexport const Board = ({ categoryNames, assignedTasks, handlePlusClick, handleTaskRemove, handleTaskMoveToNext, toggleModalCatOpen }) => {\r\n   return (\r\n      <div className=\"column\" id=\"panel-board\">\r\n         <div className=\"box header\">\r\n            <h2 className=\"title\">Tablero Kanban</h2>\r\n            <button className=\"button is-primary\" onClick={toggleModalCatOpen}>Crear</button>\r\n         </div>\r\n         <div className='box tableroKanban'>\r\n            <div className=\"table-container is-fullwidth\">\r\n               <table className=\"table is-fullwidth table-kanban\">\r\n                  <thead>\r\n                     <tr>\r\n                        {categoryNames.map((name, index) => (\r\n                           <th key={index} style={{\r\n                              textAlign: 'center',\r\n                              backgroundColor: '#EBECF0',\r\n                              height: '30px',\r\n                              verticalAlign: 'middle'\r\n                           }}>\r\n                              {name || `Categoría ${index + 1}`}\r\n                           </th>\r\n                        ))}\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                     <tr>\r\n                        {categoryNames.map((_, index) => (\r\n                           <td key={index} style={{ height: '80vh', textAlign: 'center' }}>\r\n                              <div className='pb-4'>\r\n                                 <button className=\"button is-primary is-rounded is-small\" id=\"plus\" style={{ opacity: 0.7 }} onClick={() => handlePlusClick(index)}>\r\n                                    <span className='has-text-primary-20-invert'>+</span>\r\n                                 </button>\r\n                              </div>\r\n                              {assignedTasks[index] && assignedTasks[index].map((task, taskIndex) => (\r\n                                 <div\r\n                                    key={taskIndex}\r\n                                    className='task-box-2'\r\n                                    onClick={() => handleTaskRemove(task, index)}\r\n                                    onContextMenu={(e) => {\r\n                                       e.preventDefault();\r\n                                       handleTaskMoveToNext(task, index);\r\n                                    }}\r\n                                 >\r\n                                    <span className='subtitle is-6'>{task.title}</span>\r\n                                 </div>\r\n                              ))}\r\n                           </td>\r\n                        ))}\r\n                     </tr>\r\n                  </tbody>\r\n               </table>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n"
        }
    ]
}