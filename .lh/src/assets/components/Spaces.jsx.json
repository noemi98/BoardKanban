{
    "sourceFile": "src/assets/components/Spaces.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 47,
            "patches": [
                {
                    "date": 1723569382299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1723569426154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,6 @@\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+\r\n+export const TaskBoard = () => {\r\n+    \r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723569454056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,10 @@\n import React, { useState, useEffect } from 'react';\r\n import axios from 'axios';\r\n \r\n export const TaskBoard = () => {\r\n-    \r\n+    return(\r\n+        <div>\r\n+            <h3>Hoola</h3>\r\n+        </div>\r\n+    )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723570833846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,10 @@\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+\r\n+export const Spaces = () => {\r\n+    return(\r\n+        <div>\r\n+            <h3>Hoola</h3>\r\n+        </div>\r\n+    )\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723571325332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,14 @@\n import React, { useState, useEffect } from 'react';\r\n-import axios from 'axios';\r\n \r\n+\r\n export const Spaces = () => {\r\n-    return(\r\n-        <div>\r\n-            <h3>Hoola</h3>\r\n+    return (\r\n+        <div className='p-5'>\r\n+            <form className=\"box p-5\">\r\n+                <div className=\"field\">\r\n+                    <h1 className=\"title\" style={{textAlign: 'center'}}>Bienvenido a la plataforma KT Agile</h1>\r\n+                </div>\r\n+            </form>\r\n         </div>\r\n     )\r\n-}\n-import React, { useState, useEffect } from 'react';\r\n-import axios from 'axios';\r\n-\r\n-export const TaskBoard = () => {\r\n-    return(\r\n-        <div>\r\n-            <h3>Hoola</h3>\r\n-        </div>\r\n-    )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723571361838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,13 @@\n+import React, { useState, useEffect } from 'react';\r\n+\r\n+export const Spaces = () => {\r\n+    return (\r\n+        <div className='p-5'>\r\n+            <form className=\"box p-5\">\r\n+                <div className=\"field\">\r\n+                    <h1 className=\"title\" style={{textAlign: 'center'}}>Bienvenido a la plataforma KT Agile</h1>\r\n+                </div>\r\n+            </form>\r\n+        </div>\r\n+    )\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723572103137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,24 +4,10 @@\n     return (\r\n         <div className='p-5'>\r\n             <form className=\"box p-5\">\r\n                 <div className=\"field\">\r\n-                    <h1 className=\"title\" style={{textAlign: 'center'}}>Bienvenido a la plataforma KT Agile</h1>\r\n+                    <h1 className=\"title\" style={{textAlign: 'center'}}>Listado de proyectos / espacios de trabajo</h1>\r\n                 </div>\r\n             </form>\r\n         </div>\r\n     )\r\n-}\n-import React, { useState, useEffect } from 'react';\r\n-\r\n-\r\n-export const Spaces = () => {\r\n-    return (\r\n-        <div className='p-5'>\r\n-            <form className=\"box p-5\">\r\n-                <div className=\"field\">\r\n-                    <h1 className=\"title\" style={{textAlign: 'center'}}>Bienvenido a la plataforma KT Agile</h1>\r\n-                </div>\r\n-            </form>\r\n-        </div>\r\n-    )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723572108262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n     return (\r\n         <div className='p-5'>\r\n             <form className=\"box p-5\">\r\n                 <div className=\"field\">\r\n-                    <h1 className=\"title\" style={{textAlign: 'center'}}>Listado de proyectos / espacios de trabajo</h1>\r\n+                    <h1 className=\"subtitle\" style={{textAlign: 'center'}}>Listado de proyectos / espacios de trabajo</h1>\r\n                 </div>\r\n             </form>\r\n         </div>\r\n     )\r\n"
                },
                {
                    "date": 1723572144981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n         <div className='p-5'>\r\n             <form className=\"box p-5\">\r\n                 <div className=\"field\">\r\n                     <h1 className=\"subtitle\" style={{textAlign: 'center'}}>Listado de proyectos / espacios de trabajo</h1>\r\n+                    <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n                 </div>\r\n             </form>\r\n         </div>\r\n     )\r\n"
                },
                {
                    "date": 1723572173808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,12 @@\n import React, { useState, useEffect } from 'react';\r\n \r\n export const Spaces = () => {\r\n+    const [isModalOpen, setModalOpen] = useState(false);\r\n+    const toggleModalOpen = () => {\r\n+        setModalOpen(!isModalOpen);\r\n+     }\r\n+     \r\n     return (\r\n         <div className='p-5'>\r\n             <form className=\"box p-5\">\r\n                 <div className=\"field\">\r\n"
                },
                {
                    "date": 1723572203910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,16 +4,73 @@\n     const [isModalOpen, setModalOpen] = useState(false);\r\n     const toggleModalOpen = () => {\r\n         setModalOpen(!isModalOpen);\r\n      }\r\n-     \r\n+\r\n     return (\r\n         <div className='p-5'>\r\n             <form className=\"box p-5\">\r\n                 <div className=\"field\">\r\n                     <h1 className=\"subtitle\" style={{textAlign: 'center'}}>Listado de proyectos / espacios de trabajo</h1>\r\n                     <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n                 </div>\r\n             </form>\r\n+\r\n+            {isModalOpen && (\r\n+            <div className=\"modal is-active\">\r\n+               <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n+               <div className=\"modal-card\">\r\n+                  <header className=\"modal-card-head\">\r\n+                     <p className=\"modal-card-title\">Nueva tarea</p>\r\n+                     <button className=\"delete\" aria-label=\"close\" onClick={toggleModalOpen}></button>\r\n+                  </header>\r\n+                  <section className=\"modal-card-body\">\r\n+                     <div className=\"field\">\r\n+                        <label className=\"label\">Título</label>\r\n+                        <div className=\"control\">\r\n+                           <input className=\"input is-text\" type=\"text\" placeholder=\"Text input\" />\r\n+                        </div>\r\n+                     </div>\r\n+                     <div className=\"field\">\r\n+                        <label className=\"label\">Descripción</label>\r\n+                        <div className=\"control\">\r\n+                           <textarea className=\"textarea is-text\" placeholder=\"Textarea\" rows={2}></textarea>\r\n+                        </div>\r\n+                     </div>\r\n+                     <div className='columns'>\r\n+                        <div className='column is-half'>\r\n+                           <div className=\"field\">\r\n+                              <label className=\"label\">Vencimiento</label>\r\n+                              <div className=\"control\">\r\n+                                 <input className=\"input is-text\" type=\"date\" placeholder=\"Text input\" />\r\n+                              </div>\r\n+                           </div>\r\n+                        </div>\r\n+                        <div className='column is-half'>\r\n+                           <div className=\"field\">\r\n+                              <label className=\"label\">Importancia</label>\r\n+                              <div className=\"control\">\r\n+                                 <div className=\"select is-fullwidth is-text\">\r\n+                                    <select>\r\n+                                       <option>Urgente</option>\r\n+                                       <option>Alta</option>\r\n+                                       <option>Media</option>\r\n+                                       <option>Baja</option>\r\n+                                    </select>\r\n+                                 </div>\r\n+                              </div>\r\n+                           </div>\r\n+                        </div>\r\n+                     </div>\r\n+                  </section>\r\n+                  <footer className=\"modal-card-foot\">\r\n+                     <div className=\"buttons\">\r\n+                        <button className=\"button is-success\">Guardar</button>\r\n+                        <button className=\"button\" onClick={toggleModalOpen}>Cancelar</button>\r\n+                     </div>\r\n+                  </footer>\r\n+               </div>\r\n+            </div>\r\n+         )}\r\n         </div>\r\n     )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723572227370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,22 +1,22 @@\n import React, { useState, useEffect } from 'react';\r\n \r\n export const Spaces = () => {\r\n-    const [isModalOpen, setModalOpen] = useState(false);\r\n-    const toggleModalOpen = () => {\r\n-        setModalOpen(!isModalOpen);\r\n-     }\r\n+   const [isModalOpen, setModalOpen] = useState(false);\r\n+   const toggleModalOpen = () => {\r\n+      setModalOpen(!isModalOpen);\r\n+   }\r\n \r\n-    return (\r\n-        <div className='p-5'>\r\n-            <form className=\"box p-5\">\r\n-                <div className=\"field\">\r\n-                    <h1 className=\"subtitle\" style={{textAlign: 'center'}}>Listado de proyectos / espacios de trabajo</h1>\r\n-                    <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n-                </div>\r\n-            </form>\r\n+   return (\r\n+      <div className='p-5'>\r\n+         <form className=\"box p-5\">\r\n+            <div className=\"field\">\r\n+               <h1 className=\"subtitle\" style={{ textAlign: 'center' }}>Listado de proyectos / espacios de trabajo</h1>\r\n+               <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n+            </div>\r\n+         </form>\r\n \r\n-            {isModalOpen && (\r\n+         {isModalOpen && (\r\n             <div className=\"modal is-active\">\r\n                <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n                <div className=\"modal-card\">\r\n                   <header className=\"modal-card-head\">\r\n@@ -70,7 +70,7 @@\n                   </footer>\r\n                </div>\r\n             </div>\r\n          )}\r\n-        </div>\r\n-    )\r\n+      </div>\r\n+   )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723572329900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,15 +6,13 @@\n       setModalOpen(!isModalOpen);\r\n    }\r\n \r\n    return (\r\n-      <div className='p-5'>\r\n-         <form className=\"box p-5\">\r\n-            <div className=\"field\">\r\n-               <h1 className=\"subtitle\" style={{ textAlign: 'center' }}>Listado de proyectos / espacios de trabajo</h1>\r\n-               <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n-            </div>\r\n-         </form>\r\n+      <div className='box p-5'>\r\n+         <div className=\"field\">\r\n+            <h1 className=\"subtitle\" style={{ textAlign: 'center' }}>Listado de proyectos / espacios de trabajo</h1>\r\n+            <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n+         </div>\r\n \r\n          {isModalOpen && (\r\n             <div className=\"modal is-active\">\r\n                <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n"
                },
                {
                    "date": 1723572351129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,13 +7,16 @@\n    }\r\n \r\n    return (\r\n       <div className='box p-5'>\r\n-         <div className=\"field\">\r\n-            <h1 className=\"subtitle\" style={{ textAlign: 'center' }}>Listado de proyectos / espacios de trabajo</h1>\r\n-            <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n+         <div className='box'>\r\n+            <div className=\"field\">\r\n+               <h1 className=\"subtitle\" style={{ textAlign: 'center' }}>Listado de proyectos / espacios de trabajo</h1>\r\n+               <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n+            </div>\r\n          </div>\r\n \r\n+\r\n          {isModalOpen && (\r\n             <div className=\"modal is-active\">\r\n                <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n                <div className=\"modal-card\">\r\n"
                },
                {
                    "date": 1723572360085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n             <div className=\"modal is-active\">\r\n                <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n                <div className=\"modal-card\">\r\n                   <header className=\"modal-card-head\">\r\n-                     <p className=\"modal-card-title\">Nueva tarea</p>\r\n+                     <p className=\"modal-card-title\">Nueva espacio de trabajo</p>\r\n                      <button className=\"delete\" aria-label=\"close\" onClick={toggleModalOpen}></button>\r\n                   </header>\r\n                   <section className=\"modal-card-body\">\r\n                      <div className=\"field\">\r\n"
                },
                {
                    "date": 1723572375780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n       setModalOpen(!isModalOpen);\r\n    }\r\n \r\n    return (\r\n-      <div className='box p-5'>\r\n+      <div className='p-5'>\r\n          <div className='box'>\r\n             <div className=\"field\">\r\n                <h1 className=\"subtitle\" style={{ textAlign: 'center' }}>Listado de proyectos / espacios de trabajo</h1>\r\n                <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n"
                },
                {
                    "date": 1723572388605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \r\n    return (\r\n       <div className='p-5'>\r\n          <div className='box'>\r\n-            <div className=\"field\">\r\n+            <div className=\"field\" style={{ textAlign: 'center' }}>\r\n                <h1 className=\"subtitle\" style={{ textAlign: 'center' }}>Listado de proyectos / espacios de trabajo</h1>\r\n                <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n             </div>\r\n          </div>\r\n"
                },
                {
                    "date": 1723572396330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,77 @@\n+import React, { useState, useEffect } from 'react';\r\n+\r\n+export const Spaces = () => {\r\n+   const [isModalOpen, setModalOpen] = useState(false);\r\n+   const toggleModalOpen = () => {\r\n+      setModalOpen(!isModalOpen);\r\n+   }\r\n+\r\n+   return (\r\n+      <div className='p-5'>\r\n+         <div className='box'>\r\n+            <div className=\"field\" style={{ textAlign: 'center' }}>\r\n+               <h1 className=\"subtitle\">Listado de proyectos / espacios de trabajo</h1>\r\n+               <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n+            </div>\r\n+         </div>\r\n+\r\n+\r\n+         {isModalOpen && (\r\n+            <div className=\"modal is-active\">\r\n+               <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n+               <div className=\"modal-card\">\r\n+                  <header className=\"modal-card-head\">\r\n+                     <p className=\"modal-card-title\">Nueva espacio de trabajo</p>\r\n+                     <button className=\"delete\" aria-label=\"close\" onClick={toggleModalOpen}></button>\r\n+                  </header>\r\n+                  <section className=\"modal-card-body\">\r\n+                     <div className=\"field\">\r\n+                        <label className=\"label\">Título</label>\r\n+                        <div className=\"control\">\r\n+                           <input className=\"input is-text\" type=\"text\" placeholder=\"Text input\" />\r\n+                        </div>\r\n+                     </div>\r\n+                     <div className=\"field\">\r\n+                        <label className=\"label\">Descripción</label>\r\n+                        <div className=\"control\">\r\n+                           <textarea className=\"textarea is-text\" placeholder=\"Textarea\" rows={2}></textarea>\r\n+                        </div>\r\n+                     </div>\r\n+                     <div className='columns'>\r\n+                        <div className='column is-half'>\r\n+                           <div className=\"field\">\r\n+                              <label className=\"label\">Vencimiento</label>\r\n+                              <div className=\"control\">\r\n+                                 <input className=\"input is-text\" type=\"date\" placeholder=\"Text input\" />\r\n+                              </div>\r\n+                           </div>\r\n+                        </div>\r\n+                        <div className='column is-half'>\r\n+                           <div className=\"field\">\r\n+                              <label className=\"label\">Importancia</label>\r\n+                              <div className=\"control\">\r\n+                                 <div className=\"select is-fullwidth is-text\">\r\n+                                    <select>\r\n+                                       <option>Urgente</option>\r\n+                                       <option>Alta</option>\r\n+                                       <option>Media</option>\r\n+                                       <option>Baja</option>\r\n+                                    </select>\r\n+                                 </div>\r\n+                              </div>\r\n+                           </div>\r\n+                        </div>\r\n+                     </div>\r\n+                  </section>\r\n+                  <footer className=\"modal-card-foot\">\r\n+                     <div className=\"buttons\">\r\n+                        <button className=\"button is-success\">Guardar</button>\r\n+                        <button className=\"button\" onClick={toggleModalOpen}>Cancelar</button>\r\n+                     </div>\r\n+                  </footer>\r\n+               </div>\r\n+            </div>\r\n+         )}\r\n+      </div>\r\n+   )\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723576950778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,52 @@\n+import React, { useState, useEffect } from 'react';\r\n+\r\n+export const Spaces = () => {\r\n+   const [isModalOpen, setModalOpen] = useState(false);\r\n+   const toggleModalOpen = () => {\r\n+      setModalOpen(!isModalOpen);\r\n+   }\r\n+\r\n+   return (\r\n+      <div className='p-5'>\r\n+         <div className='box'>\r\n+            <div className=\"field\" style={{ textAlign: 'center' }}>\r\n+               <h1 className=\"subtitle\">Listado de proyectos / espacios de trabajo</h1>\r\n+               <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n+            </div>\r\n+         </div>\r\n+\r\n+\r\n+         {isModalOpen && (\r\n+            <div className=\"modal is-active\">\r\n+               <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n+               <div className=\"modal-card\">\r\n+                  <header className=\"modal-card-head\">\r\n+                     <p className=\"modal-card-title\">Nueva espacio de trabajo</p>\r\n+                     <button className=\"delete\" aria-label=\"close\" onClick={toggleModalOpen}></button>\r\n+                  </header>\r\n+                  <section className=\"modal-card-body\">\r\n+                     <div className=\"field\">\r\n+                        <label className=\"label\">Título</label>\r\n+                        <div className=\"control\">\r\n+                           <input className=\"input is-text\" type=\"text\" placeholder=\"Text input\" />\r\n+                        </div>\r\n+                     </div>\r\n+                     <div className=\"field\">\r\n+                        <label className=\"label\">Descripción</label>\r\n+                        <div className=\"control\">\r\n+                           <textarea className=\"textarea is-text\" placeholder=\"Textarea\" rows={2}></textarea>\r\n+                        </div>\r\n+                     </div>\r\n+                  </section>\r\n+                  <footer className=\"modal-card-foot\">\r\n+                     <div className=\"buttons\">\r\n+                        <button className=\"button is-success\">Guardar</button>\r\n+                        <button className=\"button\" onClick={toggleModalOpen}>Cancelar</button>\r\n+                     </div>\r\n+                  </footer>\r\n+               </div>\r\n+            </div>\r\n+         )}\r\n+      </div>\r\n+   )\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723576966965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n                      </div>\r\n                      <div className=\"field\">\r\n                         <label className=\"label\">Descripción</label>\r\n                         <div className=\"control\">\r\n-                           <textarea className=\"textarea is-text\" placeholder=\"Textarea\" rows={2}></textarea>\r\n+                           <textarea className=\"textarea is-text\" placeholder=\"Descripción sobre el proyecto\" rows={2}></textarea>\r\n                         </div>\r\n                      </div>\r\n                   </section>\r\n                   <footer className=\"modal-card-foot\">\r\n@@ -48,159 +48,5 @@\n             </div>\r\n          )}\r\n       </div>\r\n    )\r\n-}\n-import React, { useState, useEffect } from 'react';\r\n-\r\n-export const Spaces = () => {\r\n-   const [isModalOpen, setModalOpen] = useState(false);\r\n-   const toggleModalOpen = () => {\r\n-      setModalOpen(!isModalOpen);\r\n-   }\r\n-\r\n-   return (\r\n-      <div className='p-5'>\r\n-         <div className='box'>\r\n-            <div className=\"field\" style={{ textAlign: 'center' }}>\r\n-               <h1 className=\"subtitle\">Listado de proyectos / espacios de trabajo</h1>\r\n-               <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n-            </div>\r\n-         </div>\r\n-\r\n-\r\n-         {isModalOpen && (\r\n-            <div className=\"modal is-active\">\r\n-               <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n-               <div className=\"modal-card\">\r\n-                  <header className=\"modal-card-head\">\r\n-                     <p className=\"modal-card-title\">Nueva espacio de trabajo</p>\r\n-                     <button className=\"delete\" aria-label=\"close\" onClick={toggleModalOpen}></button>\r\n-                  </header>\r\n-                  <section className=\"modal-card-body\">\r\n-                     <div className=\"field\">\r\n-                        <label className=\"label\">Título</label>\r\n-                        <div className=\"control\">\r\n-                           <input className=\"input is-text\" type=\"text\" placeholder=\"Text input\" />\r\n-                        </div>\r\n-                     </div>\r\n-                     <div className=\"field\">\r\n-                        <label className=\"label\">Descripción</label>\r\n-                        <div className=\"control\">\r\n-                           <textarea className=\"textarea is-text\" placeholder=\"Textarea\" rows={2}></textarea>\r\n-                        </div>\r\n-                     </div>\r\n-                     <div className='columns'>\r\n-                        <div className='column is-half'>\r\n-                           <div className=\"field\">\r\n-                              <label className=\"label\">Vencimiento</label>\r\n-                              <div className=\"control\">\r\n-                                 <input className=\"input is-text\" type=\"date\" placeholder=\"Text input\" />\r\n-                              </div>\r\n-                           </div>\r\n-                        </div>\r\n-                        <div className='column is-half'>\r\n-                           <div className=\"field\">\r\n-                              <label className=\"label\">Importancia</label>\r\n-                              <div className=\"control\">\r\n-                                 <div className=\"select is-fullwidth is-text\">\r\n-                                    <select>\r\n-                                       <option>Urgente</option>\r\n-                                       <option>Alta</option>\r\n-                                       <option>Media</option>\r\n-                                       <option>Baja</option>\r\n-                                    </select>\r\n-                                 </div>\r\n-                              </div>\r\n-                           </div>\r\n-                        </div>\r\n-                     </div>\r\n-                  </section>\r\n-                  <footer className=\"modal-card-foot\">\r\n-                     <div className=\"buttons\">\r\n-                        <button className=\"button is-success\">Guardar</button>\r\n-                        <button className=\"button\" onClick={toggleModalOpen}>Cancelar</button>\r\n-                     </div>\r\n-                  </footer>\r\n-               </div>\r\n-            </div>\r\n-         )}\r\n-      </div>\r\n-   )\r\n-}\n-import React, { useState, useEffect } from 'react';\r\n-\r\n-export const Spaces = () => {\r\n-   const [isModalOpen, setModalOpen] = useState(false);\r\n-   const toggleModalOpen = () => {\r\n-      setModalOpen(!isModalOpen);\r\n-   }\r\n-\r\n-   return (\r\n-      <div className='p-5'>\r\n-         <div className='box'>\r\n-            <div className=\"field\" style={{ textAlign: 'center' }}>\r\n-               <h1 className=\"subtitle\" style={{ textAlign: 'center' }}>Listado de proyectos / espacios de trabajo</h1>\r\n-               <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n-            </div>\r\n-         </div>\r\n-\r\n-\r\n-         {isModalOpen && (\r\n-            <div className=\"modal is-active\">\r\n-               <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n-               <div className=\"modal-card\">\r\n-                  <header className=\"modal-card-head\">\r\n-                     <p className=\"modal-card-title\">Nueva espacio de trabajo</p>\r\n-                     <button className=\"delete\" aria-label=\"close\" onClick={toggleModalOpen}></button>\r\n-                  </header>\r\n-                  <section className=\"modal-card-body\">\r\n-                     <div className=\"field\">\r\n-                        <label className=\"label\">Título</label>\r\n-                        <div className=\"control\">\r\n-                           <input className=\"input is-text\" type=\"text\" placeholder=\"Text input\" />\r\n-                        </div>\r\n-                     </div>\r\n-                     <div className=\"field\">\r\n-                        <label className=\"label\">Descripción</label>\r\n-                        <div className=\"control\">\r\n-                           <textarea className=\"textarea is-text\" placeholder=\"Textarea\" rows={2}></textarea>\r\n-                        </div>\r\n-                     </div>\r\n-                     <div className='columns'>\r\n-                        <div className='column is-half'>\r\n-                           <div className=\"field\">\r\n-                              <label className=\"label\">Vencimiento</label>\r\n-                              <div className=\"control\">\r\n-                                 <input className=\"input is-text\" type=\"date\" placeholder=\"Text input\" />\r\n-                              </div>\r\n-                           </div>\r\n-                        </div>\r\n-                        <div className='column is-half'>\r\n-                           <div className=\"field\">\r\n-                              <label className=\"label\">Importancia</label>\r\n-                              <div className=\"control\">\r\n-                                 <div className=\"select is-fullwidth is-text\">\r\n-                                    <select>\r\n-                                       <option>Urgente</option>\r\n-                                       <option>Alta</option>\r\n-                                       <option>Media</option>\r\n-                                       <option>Baja</option>\r\n-                                    </select>\r\n-                                 </div>\r\n-                              </div>\r\n-                           </div>\r\n-                        </div>\r\n-                     </div>\r\n-                  </section>\r\n-                  <footer className=\"modal-card-foot\">\r\n-                     <div className=\"buttons\">\r\n-                        <button className=\"button is-success\">Guardar</button>\r\n-                        <button className=\"button\" onClick={toggleModalOpen}>Cancelar</button>\r\n-                     </div>\r\n-                  </footer>\r\n-               </div>\r\n-            </div>\r\n-         )}\r\n-      </div>\r\n-   )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723576977183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n                   <section className=\"modal-card-body\">\r\n                      <div className=\"field\">\r\n                         <label className=\"label\">Título</label>\r\n                         <div className=\"control\">\r\n-                           <input className=\"input is-text\" type=\"text\" placeholder=\"Text input\" />\r\n+                           <input className=\"input is-text\" type=\"text\" placeholder=\"Título del proyecto\" />\r\n                         </div>\r\n                      </div>\r\n                      <div className=\"field\">\r\n                         <label className=\"label\">Descripción</label>\r\n"
                },
                {
                    "date": 1723577847702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,53 @@\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+\r\n+export const Spaces = () => {\r\n+   const [isModalOpen, setModalOpen] = useState(false);\r\n+   const toggleModalOpen = () => {\r\n+      setModalOpen(!isModalOpen);\r\n+   }\r\n+\r\n+   return (\r\n+      <div className='p-5'>\r\n+         <div className='box'>\r\n+            <div className=\"field\" style={{ textAlign: 'center' }}>\r\n+               <h1 className=\"subtitle\">Listado de proyectos / espacios de trabajo</h1>\r\n+               <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n+            </div>\r\n+         </div>\r\n+\r\n+\r\n+         {isModalOpen && (\r\n+            <div className=\"modal is-active\">\r\n+               <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n+               <div className=\"modal-card\">\r\n+                  <header className=\"modal-card-head\">\r\n+                     <p className=\"modal-card-title\">Nueva espacio de trabajo</p>\r\n+                     <button className=\"delete\" aria-label=\"close\" onClick={toggleModalOpen}></button>\r\n+                  </header>\r\n+                  <section className=\"modal-card-body\">\r\n+                     <div className=\"field\">\r\n+                        <label className=\"label\">Título</label>\r\n+                        <div className=\"control\">\r\n+                           <input className=\"input is-text\" type=\"text\" placeholder=\"Título del proyecto\" />\r\n+                        </div>\r\n+                     </div>\r\n+                     <div className=\"field\">\r\n+                        <label className=\"label\">Descripción</label>\r\n+                        <div className=\"control\">\r\n+                           <textarea className=\"textarea is-text\" placeholder=\"Descripción sobre el proyecto\" rows={2}></textarea>\r\n+                        </div>\r\n+                     </div>\r\n+                  </section>\r\n+                  <footer className=\"modal-card-foot\">\r\n+                     <div className=\"buttons\">\r\n+                        <button className=\"button is-success\">Guardar</button>\r\n+                        <button className=\"button\" onClick={toggleModalOpen}>Cancelar</button>\r\n+                     </div>\r\n+                  </footer>\r\n+               </div>\r\n+            </div>\r\n+         )}\r\n+      </div>\r\n+   )\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723577920252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,60 +6,40 @@\n    const toggleModalOpen = () => {\r\n       setModalOpen(!isModalOpen);\r\n    }\r\n \r\n-   return (\r\n-      <div className='p-5'>\r\n-         <div className='box'>\r\n-            <div className=\"field\" style={{ textAlign: 'center' }}>\r\n-               <h1 className=\"subtitle\">Listado de proyectos / espacios de trabajo</h1>\r\n-               <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n-            </div>\r\n-         </div>\r\n+   //SPACES\r\n+   const [title, setTitle] = useState('');\r\n+   const [description, setDescription] = useState('');\r\n+   const [spaces, setSpaces] = useState([]);\r\n \r\n+   //BD\r\n+   const handleSave = async () => {\r\n+      const newSpace = { title, description };\r\n+  \r\n+      try {\r\n+        await axios.post('http://localhost:3000/spaces', newSpace);\r\n+        setSpaces([...spaces, newSpace]); // Actualizar la lista de espacios\r\n+        toggleModalOpen(); // Cerrar el modal\r\n+      } catch (error) {\r\n+        console.error(\"Error guardando el espacio:\", error);\r\n+      }\r\n+    };\r\n+  \r\n+    const fetchSpaces = async () => {\r\n+      try {\r\n+        const response = await axios.get('http://localhost:3000/spaces');\r\n+        setSpaces(response.data);\r\n+      } catch (error) {\r\n+        console.error(\"Error obteniendo los espacios:\", error);\r\n+      }\r\n+    };\r\n+  \r\n+    useEffect(() => {\r\n+      fetchSpaces(); // Cargar espacios al montar el componente\r\n+    }, []);\r\n \r\n-         {isModalOpen && (\r\n-            <div className=\"modal is-active\">\r\n-               <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n-               <div className=\"modal-card\">\r\n-                  <header className=\"modal-card-head\">\r\n-                     <p className=\"modal-card-title\">Nueva espacio de trabajo</p>\r\n-                     <button className=\"delete\" aria-label=\"close\" onClick={toggleModalOpen}></button>\r\n-                  </header>\r\n-                  <section className=\"modal-card-body\">\r\n-                     <div className=\"field\">\r\n-                        <label className=\"label\">Título</label>\r\n-                        <div className=\"control\">\r\n-                           <input className=\"input is-text\" type=\"text\" placeholder=\"Título del proyecto\" />\r\n-                        </div>\r\n-                     </div>\r\n-                     <div className=\"field\">\r\n-                        <label className=\"label\">Descripción</label>\r\n-                        <div className=\"control\">\r\n-                           <textarea className=\"textarea is-text\" placeholder=\"Descripción sobre el proyecto\" rows={2}></textarea>\r\n-                        </div>\r\n-                     </div>\r\n-                  </section>\r\n-                  <footer className=\"modal-card-foot\">\r\n-                     <div className=\"buttons\">\r\n-                        <button className=\"button is-success\">Guardar</button>\r\n-                        <button className=\"button\" onClick={toggleModalOpen}>Cancelar</button>\r\n-                     </div>\r\n-                  </footer>\r\n-               </div>\r\n-            </div>\r\n-         )}\r\n-      </div>\r\n-   )\r\n-}\n-import React, { useState, useEffect } from 'react';\r\n \r\n-export const Spaces = () => {\r\n-   const [isModalOpen, setModalOpen] = useState(false);\r\n-   const toggleModalOpen = () => {\r\n-      setModalOpen(!isModalOpen);\r\n-   }\r\n-\r\n    return (\r\n       <div className='p-5'>\r\n          <div className='box'>\r\n             <div className=\"field\" style={{ textAlign: 'center' }}>\r\n"
                },
                {
                    "date": 1723578086193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,21 @@\n                <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n             </div>\r\n          </div>\r\n \r\n+         {/* Listar espacios guardados */}\r\n+      <div className='columns is-multiline'>\r\n+        {spaces.map((space, index) => (\r\n+          <div key={index} className='column is-one-quarter'>\r\n+            <div className='box'>\r\n+              <h2 className='title is-4'>{space.title}</h2>\r\n+              <p>{space.description}</p>\r\n+            </div>\r\n+          </div>\r\n+        ))}\r\n+      </div>\r\n \r\n+\r\n          {isModalOpen && (\r\n             <div className=\"modal is-active\">\r\n                <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n                <div className=\"modal-card\">\r\n"
                },
                {
                    "date": 1723578115301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,30 +14,30 @@\n \r\n    //BD\r\n    const handleSave = async () => {\r\n       const newSpace = { title, description };\r\n-  \r\n+\r\n       try {\r\n-        await axios.post('http://localhost:3000/spaces', newSpace);\r\n-        setSpaces([...spaces, newSpace]); // Actualizar la lista de espacios\r\n-        toggleModalOpen(); // Cerrar el modal\r\n+         await axios.post('http://localhost:3000/spaces', newSpace);\r\n+         setSpaces([...spaces, newSpace]); // Actualizar la lista de espacios\r\n+         toggleModalOpen(); // Cerrar el modal\r\n       } catch (error) {\r\n-        console.error(\"Error guardando el espacio:\", error);\r\n+         console.error(\"Error guardando el espacio:\", error);\r\n       }\r\n-    };\r\n-  \r\n-    const fetchSpaces = async () => {\r\n+   };\r\n+\r\n+   const fetchSpaces = async () => {\r\n       try {\r\n-        const response = await axios.get('http://localhost:3000/spaces');\r\n-        setSpaces(response.data);\r\n+         const response = await axios.get('http://localhost:3000/spaces');\r\n+         setSpaces(response.data);\r\n       } catch (error) {\r\n-        console.error(\"Error obteniendo los espacios:\", error);\r\n+         console.error(\"Error obteniendo los espacios:\", error);\r\n       }\r\n-    };\r\n-  \r\n-    useEffect(() => {\r\n+   };\r\n+\r\n+   useEffect(() => {\r\n       fetchSpaces(); // Cargar espacios al montar el componente\r\n-    }, []);\r\n+   }, []);\r\n \r\n \r\n    return (\r\n       <div className='p-5'>\r\n@@ -48,45 +48,45 @@\n             </div>\r\n          </div>\r\n \r\n          {/* Listar espacios guardados */}\r\n-      <div className='columns is-multiline'>\r\n-        {spaces.map((space, index) => (\r\n-          <div key={index} className='column is-one-quarter'>\r\n-            <div className='box'>\r\n-              <h2 className='title is-4'>{space.title}</h2>\r\n-              <p>{space.description}</p>\r\n-            </div>\r\n-          </div>\r\n-        ))}\r\n-      </div>\r\n+         <div className='columns is-multiline'>\r\n+            {spaces.map((space, index) => (\r\n+               <div key={index} className='column is-one-quarter'>\r\n+                  <div className='box'>\r\n+                     <h2 className='title is-4'>{space.title}</h2>\r\n+                     <p>{space.description}</p>\r\n+                  </div>\r\n+               </div>\r\n+            ))}\r\n+         </div>\r\n \r\n \r\n          {isModalOpen && (\r\n             <div className=\"modal is-active\">\r\n                <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n                <div className=\"modal-card\">\r\n                   <header className=\"modal-card-head\">\r\n-                     <p className=\"modal-card-title\">Nueva espacio de trabajo</p>\r\n+                     <p className=\"modal-card-title\">Nuevo espacio de trabajo</p>\r\n                      <button className=\"delete\" aria-label=\"close\" onClick={toggleModalOpen}></button>\r\n                   </header>\r\n                   <section className=\"modal-card-body\">\r\n                      <div className=\"field\">\r\n                         <label className=\"label\">Título</label>\r\n                         <div className=\"control\">\r\n-                           <input className=\"input is-text\" type=\"text\" placeholder=\"Título del proyecto\" />\r\n+                           <input className=\"input is-text\" type=\"text\" placeholder=\"Título del proyecto\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n                         </div>\r\n                      </div>\r\n                      <div className=\"field\">\r\n                         <label className=\"label\">Descripción</label>\r\n                         <div className=\"control\">\r\n-                           <textarea className=\"textarea is-text\" placeholder=\"Descripción sobre el proyecto\" rows={2}></textarea>\r\n+                           <textarea className=\"textarea is-text\" placeholder=\"Descripción sobre el proyecto\" rows={2} value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                         </div>\r\n                      </div>\r\n                   </section>\r\n                   <footer className=\"modal-card-foot\">\r\n                      <div className=\"buttons\">\r\n-                        <button className=\"button is-success\">Guardar</button>\r\n+                        <button className=\"button is-success\" onClick={handleSave}>Guardar</button>\r\n                         <button className=\"button\" onClick={toggleModalOpen}>Cancelar</button>\r\n                      </div>\r\n                   </footer>\r\n                </div>\r\n"
                },
                {
                    "date": 1723579267863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,98 @@\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+import { useNavigate } from 'react-router-dom';\r\n+\r\n+export const Spaces = () => {\r\n+   const [isModalOpen, setModalOpen] = useState(false);\r\n+   const toggleModalOpen = () => {\r\n+      setModalOpen(!isModalOpen);\r\n+   }\r\n+\r\n+   //SPACES\r\n+   const [title, setTitle] = useState('');\r\n+   const [description, setDescription] = useState('');\r\n+   const [spaces, setSpaces] = useState([]);\r\n+\r\n+   //BD\r\n+   const handleSave = async () => {\r\n+      const newSpace = { title, description };\r\n+\r\n+      try {\r\n+         await axios.post('http://localhost:3000/spaces', newSpace);\r\n+         setSpaces([...spaces, newSpace]); // Actualizar la lista de espacios\r\n+         toggleModalOpen(); // Cerrar el modal\r\n+      } catch (error) {\r\n+         console.error(\"Error guardando el espacio:\", error);\r\n+      }\r\n+   };\r\n+\r\n+   const fetchSpaces = async () => {\r\n+      try {\r\n+         const response = await axios.get('http://localhost:3000/spaces');\r\n+         setSpaces(response.data);\r\n+      } catch (error) {\r\n+         console.error(\"Error obteniendo los espacios:\", error);\r\n+      }\r\n+   };\r\n+\r\n+   useEffect(() => {\r\n+      fetchSpaces(); // Cargar espacios al montar el componente\r\n+   }, []);\r\n+\r\n+\r\n+   return (\r\n+      <div className='p-5'>\r\n+         <div className='box'>\r\n+            <div className=\"field\" style={{ textAlign: 'center' }}>\r\n+               <h1 className=\"subtitle\">Listado de proyectos / espacios de trabajo</h1>\r\n+               <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n+            </div>\r\n+         </div>\r\n+\r\n+         {/* Listar espacios guardados */}\r\n+         <div className='columns is-multiline'>\r\n+            {spaces.map((space, index) => (\r\n+               <div key={index} className='column is-one-quarter'>\r\n+                  <div className='box'>\r\n+                     <h2 className='title is-4'>{space.title}</h2>\r\n+                     <p>{space.description}</p>\r\n+                  </div>\r\n+               </div>\r\n+            ))}\r\n+         </div>\r\n+\r\n+\r\n+         {isModalOpen && (\r\n+            <div className=\"modal is-active\">\r\n+               <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n+               <div className=\"modal-card\">\r\n+                  <header className=\"modal-card-head\">\r\n+                     <p className=\"modal-card-title\">Nuevo espacio de trabajo</p>\r\n+                     <button className=\"delete\" aria-label=\"close\" onClick={toggleModalOpen}></button>\r\n+                  </header>\r\n+                  <section className=\"modal-card-body\">\r\n+                     <div className=\"field\">\r\n+                        <label className=\"label\">Título</label>\r\n+                        <div className=\"control\">\r\n+                           <input className=\"input is-text\" type=\"text\" placeholder=\"Título del proyecto\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n+                        </div>\r\n+                     </div>\r\n+                     <div className=\"field\">\r\n+                        <label className=\"label\">Descripción</label>\r\n+                        <div className=\"control\">\r\n+                           <textarea className=\"textarea is-text\" placeholder=\"Descripción sobre el proyecto\" rows={2} value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n+                        </div>\r\n+                     </div>\r\n+                  </section>\r\n+                  <footer className=\"modal-card-foot\">\r\n+                     <div className=\"buttons\">\r\n+                        <button className=\"button is-success\" onClick={handleSave}>Guardar</button>\r\n+                        <button className=\"button\" onClick={toggleModalOpen}>Cancelar</button>\r\n+                     </div>\r\n+                  </footer>\r\n+               </div>\r\n+            </div>\r\n+         )}\r\n+      </div>\r\n+   )\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723579354611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,8 +38,13 @@\n    useEffect(() => {\r\n       fetchSpaces(); // Cargar espacios al montar el componente\r\n    }, []);\r\n \r\n+   //HOOK PARA LA NAVEGACION Y CLIC\r\n+   const navigate = useNavigate();\r\n+   const handleSpaceClick = (spaceId) => {\r\n+      navigate(`/tablero/${spaceId}`); // Navegar al tablero con el spaceId\r\n+   };\r\n \r\n    return (\r\n       <div className='p-5'>\r\n          <div className='box'>\r\n@@ -50,116 +55,19 @@\n          </div>\r\n \r\n          {/* Listar espacios guardados */}\r\n          <div className='columns is-multiline'>\r\n-            {spaces.map((space, index) => (\r\n-               <div key={index} className='column is-one-quarter'>\r\n-                  <div className='box'>\r\n-                     <h2 className='title is-4'>{space.title}</h2>\r\n-                     <p>{space.description}</p>\r\n-                  </div>\r\n-               </div>\r\n-            ))}\r\n-         </div>\r\n-\r\n-\r\n-         {isModalOpen && (\r\n-            <div className=\"modal is-active\">\r\n-               <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n-               <div className=\"modal-card\">\r\n-                  <header className=\"modal-card-head\">\r\n-                     <p className=\"modal-card-title\">Nuevo espacio de trabajo</p>\r\n-                     <button className=\"delete\" aria-label=\"close\" onClick={toggleModalOpen}></button>\r\n-                  </header>\r\n-                  <section className=\"modal-card-body\">\r\n-                     <div className=\"field\">\r\n-                        <label className=\"label\">Título</label>\r\n-                        <div className=\"control\">\r\n-                           <input className=\"input is-text\" type=\"text\" placeholder=\"Título del proyecto\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n-                        </div>\r\n-                     </div>\r\n-                     <div className=\"field\">\r\n-                        <label className=\"label\">Descripción</label>\r\n-                        <div className=\"control\">\r\n-                           <textarea className=\"textarea is-text\" placeholder=\"Descripción sobre el proyecto\" rows={2} value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n-                        </div>\r\n-                     </div>\r\n-                  </section>\r\n-                  <footer className=\"modal-card-foot\">\r\n-                     <div className=\"buttons\">\r\n-                        <button className=\"button is-success\" onClick={handleSave}>Guardar</button>\r\n-                        <button className=\"button\" onClick={toggleModalOpen}>Cancelar</button>\r\n-                     </div>\r\n-                  </footer>\r\n-               </div>\r\n+        {spaces.map((space) => (\r\n+          <div key={space.id} className='column is-one-quarter'>\r\n+            <div className='box' onClick={() => handleSpaceClick(space.id)}> {/* Manejar clic en el espacio */}\r\n+              <h2 className='title is-4'>{space.title}</h2>\r\n+              <p>{space.description}</p>\r\n             </div>\r\n-         )}\r\n+          </div>\r\n+        ))}\r\n       </div>\r\n-   )\r\n-}\n-import React, { useState, useEffect } from 'react';\r\n-import axios from 'axios';\r\n \r\n-export const Spaces = () => {\r\n-   const [isModalOpen, setModalOpen] = useState(false);\r\n-   const toggleModalOpen = () => {\r\n-      setModalOpen(!isModalOpen);\r\n-   }\r\n \r\n-   //SPACES\r\n-   const [title, setTitle] = useState('');\r\n-   const [description, setDescription] = useState('');\r\n-   const [spaces, setSpaces] = useState([]);\r\n-\r\n-   //BD\r\n-   const handleSave = async () => {\r\n-      const newSpace = { title, description };\r\n-\r\n-      try {\r\n-         await axios.post('http://localhost:3000/spaces', newSpace);\r\n-         setSpaces([...spaces, newSpace]); // Actualizar la lista de espacios\r\n-         toggleModalOpen(); // Cerrar el modal\r\n-      } catch (error) {\r\n-         console.error(\"Error guardando el espacio:\", error);\r\n-      }\r\n-   };\r\n-\r\n-   const fetchSpaces = async () => {\r\n-      try {\r\n-         const response = await axios.get('http://localhost:3000/spaces');\r\n-         setSpaces(response.data);\r\n-      } catch (error) {\r\n-         console.error(\"Error obteniendo los espacios:\", error);\r\n-      }\r\n-   };\r\n-\r\n-   useEffect(() => {\r\n-      fetchSpaces(); // Cargar espacios al montar el componente\r\n-   }, []);\r\n-\r\n-\r\n-   return (\r\n-      <div className='p-5'>\r\n-         <div className='box'>\r\n-            <div className=\"field\" style={{ textAlign: 'center' }}>\r\n-               <h1 className=\"subtitle\">Listado de proyectos / espacios de trabajo</h1>\r\n-               <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n-            </div>\r\n-         </div>\r\n-\r\n-         {/* Listar espacios guardados */}\r\n-         <div className='columns is-multiline'>\r\n-            {spaces.map((space, index) => (\r\n-               <div key={index} className='column is-one-quarter'>\r\n-                  <div className='box'>\r\n-                     <h2 className='title is-4'>{space.title}</h2>\r\n-                     <p>{space.description}</p>\r\n-                  </div>\r\n-               </div>\r\n-            ))}\r\n-         </div>\r\n-\r\n-\r\n          {isModalOpen && (\r\n             <div className=\"modal is-active\">\r\n                <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n                <div className=\"modal-card\">\r\n"
                },
                {
                    "date": 1723579378658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,17 +55,17 @@\n          </div>\r\n \r\n          {/* Listar espacios guardados */}\r\n          <div className='columns is-multiline'>\r\n-        {spaces.map((space) => (\r\n-          <div key={space.id} className='column is-one-quarter'>\r\n-            <div className='box' onClick={() => handleSpaceClick(space.id)}> {/* Manejar clic en el espacio */}\r\n-              <h2 className='title is-4'>{space.title}</h2>\r\n-              <p>{space.description}</p>\r\n-            </div>\r\n-          </div>\r\n-        ))}\r\n-      </div>\r\n+            {spaces.map((space) => (\r\n+               <div key={space.id} className='column is-one-quarter'>\r\n+                  <div className='box' onClick={() => handleSpaceClick(space.id)}> {/* Manejar clic en el espacio */}\r\n+                     <h2 className='title is-4'>{space.title}</h2>\r\n+                     <p>{space.description}</p>\r\n+                  </div>\r\n+               </div>\r\n+            ))}\r\n+         </div>\r\n \r\n \r\n          {isModalOpen && (\r\n             <div className=\"modal is-active\">\r\n"
                },
                {
                    "date": 1723580911083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,115 @@\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+import { useNavigate } from 'react-router-dom';\r\n+\r\n+export const Spaces = () => {\r\n+   const [isModalOpen, setModalOpen] = useState(false);\r\n+   const toggleModalOpen = () => {\r\n+      setModalOpen(!isModalOpen);\r\n+   }\r\n+\r\n+   //SPACES\r\n+   const [title, setTitle] = useState('');\r\n+   const [description, setDescription] = useState('');\r\n+   const [spaces, setSpaces] = useState([]);\r\n+\r\n+   //BD\r\n+   const handleSave = async () => {\r\n+      const newSpace = { title, description };\r\n+\r\n+      try {\r\n+         await axios.post('http://localhost:3000/spaces', newSpace);\r\n+         setSpaces([...spaces, newSpace]); // Actualizar la lista de espacios\r\n+         toggleModalOpen(); // Cerrar el modal\r\n+      } catch (error) {\r\n+         console.error(\"Error guardando el espacio:\", error);\r\n+      }\r\n+   };\r\n+\r\n+   const fetchSpaces = async () => {\r\n+      try {\r\n+         const response = await axios.get('http://localhost:3000/spaces');\r\n+         setSpaces(response.data);\r\n+      } catch (error) {\r\n+         console.error(\"Error obteniendo los espacios:\", error);\r\n+      }\r\n+   };\r\n+\r\n+   useEffect(() => {\r\n+      fetchSpaces(); // Cargar espacios al montar el componente\r\n+   }, []);\r\n+\r\n+   //HOOK PARA LA NAVEGACION Y CLIC\r\n+   const navigate = useNavigate();\r\n+   const handleSpaceClick = (spaceId) => {\r\n+      navigate(`/tablero/${spaceId}`); // Navegar al tablero con el spaceId\r\n+   };\r\n+\r\n+   return (\r\n+      <div className='p-5'>\r\n+         <div className='box'>\r\n+            <div className=\"field\" style={{ textAlign: 'center' }}>\r\n+               <h1 className=\"subtitle\">Listado de proyectos / espacios de trabajo</h1>\r\n+               <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n+            </div>\r\n+         </div>\r\n+\r\n+         {/* Listar espacios guardados */}\r\n+         <div className='columns is-multiline'>\r\n+            {spaces.map((space) => (\r\n+               <div key={space.id} className='column is-one-quarter'>\r\n+                  <div className='box' onClick={() => handleSpaceClick(space.id)}> {/* Manejar clic en el espacio */}\r\n+                     <div className=\"buttons\" style={{ position: 'absolute', top: '10px', right: '10px' }}>\r\n+                        <button className=\"button is-small is-light\" onClick={() => handleEdit(space)}>\r\n+                           <span className=\"icon is-small\">\r\n+                           <i className=\"fas fa-edit\"></i>\r\n+                           </span>\r\n+                        </button>\r\n+                        <button className=\"button is-small is-danger\" onClick={() => handleDelete(space.id)}>\r\n+                           <span className=\"icon is-small\">\r\n+                           <i className=\"fas fa-trash\"></i>\r\n+                           </span>\r\n+                        </button>\r\n+                     </div>\r\n+                     <h2 className='title is-4'>{space.title}</h2>\r\n+                     <p>{space.description}</p>\r\n+                  </div>\r\n+               </div>\r\n+            ))}\r\n+         </div>\r\n+\r\n+\r\n+         {isModalOpen && (\r\n+            <div className=\"modal is-active\">\r\n+               <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n+               <div className=\"modal-card\">\r\n+                  <header className=\"modal-card-head\">\r\n+                     <p className=\"modal-card-title\">Nuevo espacio de trabajo</p>\r\n+                     <button className=\"delete\" aria-label=\"close\" onClick={toggleModalOpen}></button>\r\n+                  </header>\r\n+                  <section className=\"modal-card-body\">\r\n+                     <div className=\"field\">\r\n+                        <label className=\"label\">Título</label>\r\n+                        <div className=\"control\">\r\n+                           <input className=\"input is-text\" type=\"text\" placeholder=\"Título del proyecto\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n+                        </div>\r\n+                     </div>\r\n+                     <div className=\"field\">\r\n+                        <label className=\"label\">Descripción</label>\r\n+                        <div className=\"control\">\r\n+                           <textarea className=\"textarea is-text\" placeholder=\"Descripción sobre el proyecto\" rows={2} value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n+                        </div>\r\n+                     </div>\r\n+                  </section>\r\n+                  <footer className=\"modal-card-foot\">\r\n+                     <div className=\"buttons\">\r\n+                        <button className=\"button is-success\" onClick={handleSave}>Guardar</button>\r\n+                        <button className=\"button\" onClick={toggleModalOpen}>Cancelar</button>\r\n+                     </div>\r\n+                  </footer>\r\n+               </div>\r\n+            </div>\r\n+         )}\r\n+      </div>\r\n+   )\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723580972875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,117 @@\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+import { useNavigate } from 'react-router-dom';\r\n+\r\n+export const Spaces = () => {\r\n+   const [isModalOpen, setModalOpen] = useState(false);\r\n+   const toggleModalOpen = () => {\r\n+      setModalOpen(!isModalOpen);\r\n+   }\r\n+\r\n+   //SPACES\r\n+   const [title, setTitle] = useState('');\r\n+   const [description, setDescription] = useState('');\r\n+   const [spaces, setSpaces] = useState([]);\r\n+\r\n+   //BD\r\n+   const handleSave = async () => {\r\n+      const newSpace = { title, description };\r\n+\r\n+      try {\r\n+         await axios.post('http://localhost:3000/spaces', newSpace);\r\n+         setSpaces([...spaces, newSpace]); // Actualizar la lista de espacios\r\n+         toggleModalOpen(); // Cerrar el modal\r\n+      } catch (error) {\r\n+         console.error(\"Error guardando el espacio:\", error);\r\n+      }\r\n+   };\r\n+\r\n+   const fetchSpaces = async () => {\r\n+      try {\r\n+         const response = await axios.get('http://localhost:3000/spaces');\r\n+         setSpaces(response.data);\r\n+      } catch (error) {\r\n+         console.error(\"Error obteniendo los espacios:\", error);\r\n+      }\r\n+   };\r\n+\r\n+   useEffect(() => {\r\n+      fetchSpaces(); // Cargar espacios al montar el componente\r\n+   }, []);\r\n+\r\n+   //HOOK PARA LA NAVEGACION Y CLIC\r\n+   const navigate = useNavigate();\r\n+   const handleSpaceClick = (spaceId) => {\r\n+      navigate(`/tablero/${spaceId}`); // Navegar al tablero con el spaceId\r\n+   };\r\n+\r\n+   return (\r\n+      <div className='p-5'>\r\n+         <div className='box'>\r\n+            <div className=\"field\" style={{ textAlign: 'center' }}>\r\n+               <h1 className=\"subtitle\">Listado de proyectos / espacios de trabajo</h1>\r\n+               <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n+            </div>\r\n+         </div>\r\n+\r\n+         {/* Listar espacios guardados */}\r\n+         <div className='columns is-multiline'>\r\n+            {spaces.map((space) => (\r\n+               <div key={space.id} className='column is-one-quarter'>\r\n+                  <div className='box' onClick={() => handleSpaceClick(space.id)}> {/* Manejar clic en el espacio */}\r\n+                     <div className=\"buttons\" style={{ position: 'absolute', top: '10px', right: '10px' }}>\r\n+                        <button className=\"button is-small is-light\" onClick={() => handleEdit(space)}>\r\n+                           <span className=\"icon is-small\">\r\n+                           <i className=\"fas fa-edit\"></i>\r\n+                           </span>\r\n+                        </button>\r\n+                        <button className=\"button is-small is-danger\" onClick={() => handleDelete(space.id)}>\r\n+                           <span className=\"icon is-small\">\r\n+                           <i className=\"fas fa-trash\"></i>\r\n+                           </span>\r\n+                        </button>\r\n+                     </div>\r\n+                     <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n+                     \r\n+                     <h2 className='title is-4'>{space.title}</h2>\r\n+                     <p>{space.description}</p>\r\n+                  </div>\r\n+               </div>\r\n+            ))}\r\n+         </div>\r\n+\r\n+\r\n+         {isModalOpen && (\r\n+            <div className=\"modal is-active\">\r\n+               <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n+               <div className=\"modal-card\">\r\n+                  <header className=\"modal-card-head\">\r\n+                     <p className=\"modal-card-title\">Nuevo espacio de trabajo</p>\r\n+                     <button className=\"delete\" aria-label=\"close\" onClick={toggleModalOpen}></button>\r\n+                  </header>\r\n+                  <section className=\"modal-card-body\">\r\n+                     <div className=\"field\">\r\n+                        <label className=\"label\">Título</label>\r\n+                        <div className=\"control\">\r\n+                           <input className=\"input is-text\" type=\"text\" placeholder=\"Título del proyecto\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n+                        </div>\r\n+                     </div>\r\n+                     <div className=\"field\">\r\n+                        <label className=\"label\">Descripción</label>\r\n+                        <div className=\"control\">\r\n+                           <textarea className=\"textarea is-text\" placeholder=\"Descripción sobre el proyecto\" rows={2} value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n+                        </div>\r\n+                     </div>\r\n+                  </section>\r\n+                  <footer className=\"modal-card-foot\">\r\n+                     <div className=\"buttons\">\r\n+                        <button className=\"button is-success\" onClick={handleSave}>Guardar</button>\r\n+                        <button className=\"button\" onClick={toggleModalOpen}>Cancelar</button>\r\n+                     </div>\r\n+                  </footer>\r\n+               </div>\r\n+            </div>\r\n+         )}\r\n+      </div>\r\n+   )\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723580980741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,126 +69,12 @@\n                            <span className=\"icon is-small\">\r\n                            <i className=\"fas fa-trash\"></i>\r\n                            </span>\r\n                         </button>\r\n+                        <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n                      </div>\r\n                      <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n-                     \r\n-                     <h2 className='title is-4'>{space.title}</h2>\r\n-                     <p>{space.description}</p>\r\n-                  </div>\r\n-               </div>\r\n-            ))}\r\n-         </div>\r\n \r\n-\r\n-         {isModalOpen && (\r\n-            <div className=\"modal is-active\">\r\n-               <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n-               <div className=\"modal-card\">\r\n-                  <header className=\"modal-card-head\">\r\n-                     <p className=\"modal-card-title\">Nuevo espacio de trabajo</p>\r\n-                     <button className=\"delete\" aria-label=\"close\" onClick={toggleModalOpen}></button>\r\n-                  </header>\r\n-                  <section className=\"modal-card-body\">\r\n-                     <div className=\"field\">\r\n-                        <label className=\"label\">Título</label>\r\n-                        <div className=\"control\">\r\n-                           <input className=\"input is-text\" type=\"text\" placeholder=\"Título del proyecto\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n-                        </div>\r\n-                     </div>\r\n-                     <div className=\"field\">\r\n-                        <label className=\"label\">Descripción</label>\r\n-                        <div className=\"control\">\r\n-                           <textarea className=\"textarea is-text\" placeholder=\"Descripción sobre el proyecto\" rows={2} value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n-                        </div>\r\n-                     </div>\r\n-                  </section>\r\n-                  <footer className=\"modal-card-foot\">\r\n-                     <div className=\"buttons\">\r\n-                        <button className=\"button is-success\" onClick={handleSave}>Guardar</button>\r\n-                        <button className=\"button\" onClick={toggleModalOpen}>Cancelar</button>\r\n-                     </div>\r\n-                  </footer>\r\n-               </div>\r\n-            </div>\r\n-         )}\r\n-      </div>\r\n-   )\r\n-}\n-import React, { useState, useEffect } from 'react';\r\n-import axios from 'axios';\r\n-import { useNavigate } from 'react-router-dom';\r\n-\r\n-export const Spaces = () => {\r\n-   const [isModalOpen, setModalOpen] = useState(false);\r\n-   const toggleModalOpen = () => {\r\n-      setModalOpen(!isModalOpen);\r\n-   }\r\n-\r\n-   //SPACES\r\n-   const [title, setTitle] = useState('');\r\n-   const [description, setDescription] = useState('');\r\n-   const [spaces, setSpaces] = useState([]);\r\n-\r\n-   //BD\r\n-   const handleSave = async () => {\r\n-      const newSpace = { title, description };\r\n-\r\n-      try {\r\n-         await axios.post('http://localhost:3000/spaces', newSpace);\r\n-         setSpaces([...spaces, newSpace]); // Actualizar la lista de espacios\r\n-         toggleModalOpen(); // Cerrar el modal\r\n-      } catch (error) {\r\n-         console.error(\"Error guardando el espacio:\", error);\r\n-      }\r\n-   };\r\n-\r\n-   const fetchSpaces = async () => {\r\n-      try {\r\n-         const response = await axios.get('http://localhost:3000/spaces');\r\n-         setSpaces(response.data);\r\n-      } catch (error) {\r\n-         console.error(\"Error obteniendo los espacios:\", error);\r\n-      }\r\n-   };\r\n-\r\n-   useEffect(() => {\r\n-      fetchSpaces(); // Cargar espacios al montar el componente\r\n-   }, []);\r\n-\r\n-   //HOOK PARA LA NAVEGACION Y CLIC\r\n-   const navigate = useNavigate();\r\n-   const handleSpaceClick = (spaceId) => {\r\n-      navigate(`/tablero/${spaceId}`); // Navegar al tablero con el spaceId\r\n-   };\r\n-\r\n-   return (\r\n-      <div className='p-5'>\r\n-         <div className='box'>\r\n-            <div className=\"field\" style={{ textAlign: 'center' }}>\r\n-               <h1 className=\"subtitle\">Listado de proyectos / espacios de trabajo</h1>\r\n-               <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n-            </div>\r\n-         </div>\r\n-\r\n-         {/* Listar espacios guardados */}\r\n-         <div className='columns is-multiline'>\r\n-            {spaces.map((space) => (\r\n-               <div key={space.id} className='column is-one-quarter'>\r\n-                  <div className='box' onClick={() => handleSpaceClick(space.id)}> {/* Manejar clic en el espacio */}\r\n-                     <div className=\"buttons\" style={{ position: 'absolute', top: '10px', right: '10px' }}>\r\n-                        <button className=\"button is-small is-light\" onClick={() => handleEdit(space)}>\r\n-                           <span className=\"icon is-small\">\r\n-                           <i className=\"fas fa-edit\"></i>\r\n-                           </span>\r\n-                        </button>\r\n-                        <button className=\"button is-small is-danger\" onClick={() => handleDelete(space.id)}>\r\n-                           <span className=\"icon is-small\">\r\n-                           <i className=\"fas fa-trash\"></i>\r\n-                           </span>\r\n-                        </button>\r\n-                     </div>\r\n                      <h2 className='title is-4'>{space.title}</h2>\r\n                      <p>{space.description}</p>\r\n                   </div>\r\n                </div>\r\n@@ -228,108 +114,5 @@\n             </div>\r\n          )}\r\n       </div>\r\n    )\r\n-}\n-import React, { useState, useEffect } from 'react';\r\n-import axios from 'axios';\r\n-import { useNavigate } from 'react-router-dom';\r\n-\r\n-export const Spaces = () => {\r\n-   const [isModalOpen, setModalOpen] = useState(false);\r\n-   const toggleModalOpen = () => {\r\n-      setModalOpen(!isModalOpen);\r\n-   }\r\n-\r\n-   //SPACES\r\n-   const [title, setTitle] = useState('');\r\n-   const [description, setDescription] = useState('');\r\n-   const [spaces, setSpaces] = useState([]);\r\n-\r\n-   //BD\r\n-   const handleSave = async () => {\r\n-      const newSpace = { title, description };\r\n-\r\n-      try {\r\n-         await axios.post('http://localhost:3000/spaces', newSpace);\r\n-         setSpaces([...spaces, newSpace]); // Actualizar la lista de espacios\r\n-         toggleModalOpen(); // Cerrar el modal\r\n-      } catch (error) {\r\n-         console.error(\"Error guardando el espacio:\", error);\r\n-      }\r\n-   };\r\n-\r\n-   const fetchSpaces = async () => {\r\n-      try {\r\n-         const response = await axios.get('http://localhost:3000/spaces');\r\n-         setSpaces(response.data);\r\n-      } catch (error) {\r\n-         console.error(\"Error obteniendo los espacios:\", error);\r\n-      }\r\n-   };\r\n-\r\n-   useEffect(() => {\r\n-      fetchSpaces(); // Cargar espacios al montar el componente\r\n-   }, []);\r\n-\r\n-   //HOOK PARA LA NAVEGACION Y CLIC\r\n-   const navigate = useNavigate();\r\n-   const handleSpaceClick = (spaceId) => {\r\n-      navigate(`/tablero/${spaceId}`); // Navegar al tablero con el spaceId\r\n-   };\r\n-\r\n-   return (\r\n-      <div className='p-5'>\r\n-         <div className='box'>\r\n-            <div className=\"field\" style={{ textAlign: 'center' }}>\r\n-               <h1 className=\"subtitle\">Listado de proyectos / espacios de trabajo</h1>\r\n-               <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n-            </div>\r\n-         </div>\r\n-\r\n-         {/* Listar espacios guardados */}\r\n-         <div className='columns is-multiline'>\r\n-            {spaces.map((space) => (\r\n-               <div key={space.id} className='column is-one-quarter'>\r\n-                  <div className='box' onClick={() => handleSpaceClick(space.id)}> {/* Manejar clic en el espacio */}\r\n-                     <h2 className='title is-4'>{space.title}</h2>\r\n-                     <p>{space.description}</p>\r\n-                  </div>\r\n-               </div>\r\n-            ))}\r\n-         </div>\r\n-\r\n-\r\n-         {isModalOpen && (\r\n-            <div className=\"modal is-active\">\r\n-               <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n-               <div className=\"modal-card\">\r\n-                  <header className=\"modal-card-head\">\r\n-                     <p className=\"modal-card-title\">Nuevo espacio de trabajo</p>\r\n-                     <button className=\"delete\" aria-label=\"close\" onClick={toggleModalOpen}></button>\r\n-                  </header>\r\n-                  <section className=\"modal-card-body\">\r\n-                     <div className=\"field\">\r\n-                        <label className=\"label\">Título</label>\r\n-                        <div className=\"control\">\r\n-                           <input className=\"input is-text\" type=\"text\" placeholder=\"Título del proyecto\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n-                        </div>\r\n-                     </div>\r\n-                     <div className=\"field\">\r\n-                        <label className=\"label\">Descripción</label>\r\n-                        <div className=\"control\">\r\n-                           <textarea className=\"textarea is-text\" placeholder=\"Descripción sobre el proyecto\" rows={2} value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n-                        </div>\r\n-                     </div>\r\n-                  </section>\r\n-                  <footer className=\"modal-card-foot\">\r\n-                     <div className=\"buttons\">\r\n-                        <button className=\"button is-success\" onClick={handleSave}>Guardar</button>\r\n-                        <button className=\"button\" onClick={toggleModalOpen}>Cancelar</button>\r\n-                     </div>\r\n-                  </footer>\r\n-               </div>\r\n-            </div>\r\n-         )}\r\n-      </div>\r\n-   )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723580993654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n          <div className='columns is-multiline'>\r\n             {spaces.map((space) => (\r\n                <div key={space.id} className='column is-one-quarter'>\r\n                   <div className='box' onClick={() => handleSpaceClick(space.id)}> {/* Manejar clic en el espacio */}\r\n-                     <div className=\"buttons\" style={{ position: 'absolute', top: '10px', right: '10px' }}>\r\n+                     <div style={{ position: 'absolute', top: '10px', right: '10px' }}>\r\n                         <button className=\"button is-small is-light\" onClick={() => handleEdit(space)}>\r\n                            <span className=\"icon is-small\">\r\n                            <i className=\"fas fa-edit\"></i>\r\n                            </span>\r\n"
                },
                {
                    "date": 1723581001150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,109 @@\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+import { useNavigate } from 'react-router-dom';\r\n+\r\n+export const Spaces = () => {\r\n+   const [isModalOpen, setModalOpen] = useState(false);\r\n+   const toggleModalOpen = () => {\r\n+      setModalOpen(!isModalOpen);\r\n+   }\r\n+\r\n+   //SPACES\r\n+   const [title, setTitle] = useState('');\r\n+   const [description, setDescription] = useState('');\r\n+   const [spaces, setSpaces] = useState([]);\r\n+\r\n+   //BD\r\n+   const handleSave = async () => {\r\n+      const newSpace = { title, description };\r\n+\r\n+      try {\r\n+         await axios.post('http://localhost:3000/spaces', newSpace);\r\n+         setSpaces([...spaces, newSpace]); // Actualizar la lista de espacios\r\n+         toggleModalOpen(); // Cerrar el modal\r\n+      } catch (error) {\r\n+         console.error(\"Error guardando el espacio:\", error);\r\n+      }\r\n+   };\r\n+\r\n+   const fetchSpaces = async () => {\r\n+      try {\r\n+         const response = await axios.get('http://localhost:3000/spaces');\r\n+         setSpaces(response.data);\r\n+      } catch (error) {\r\n+         console.error(\"Error obteniendo los espacios:\", error);\r\n+      }\r\n+   };\r\n+\r\n+   useEffect(() => {\r\n+      fetchSpaces(); // Cargar espacios al montar el componente\r\n+   }, []);\r\n+\r\n+   //HOOK PARA LA NAVEGACION Y CLIC\r\n+   const navigate = useNavigate();\r\n+   const handleSpaceClick = (spaceId) => {\r\n+      navigate(`/tablero/${spaceId}`); // Navegar al tablero con el spaceId\r\n+   };\r\n+\r\n+   return (\r\n+      <div className='p-5'>\r\n+         <div className='box'>\r\n+            <div className=\"field\" style={{ textAlign: 'center' }}>\r\n+               <h1 className=\"subtitle\">Listado de proyectos / espacios de trabajo</h1>\r\n+               <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n+            </div>\r\n+         </div>\r\n+\r\n+         {/* Listar espacios guardados */}\r\n+         <div className='columns is-multiline'>\r\n+            {spaces.map((space) => (\r\n+               <div key={space.id} className='column is-one-quarter'>\r\n+                  <div className='box' onClick={() => handleSpaceClick(space.id)}> {/* Manejar clic en el espacio */}\r\n+                     <div style={{ position: 'absolute', top: '10px', right: '10px' }}>\r\n+                        \r\n+                        <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n+                     </div>\r\n+                     \r\n+\r\n+                     <h2 className='title is-4'>{space.title}</h2>\r\n+                     <p>{space.description}</p>\r\n+                  </div>\r\n+               </div>\r\n+            ))}\r\n+         </div>\r\n+\r\n+\r\n+         {isModalOpen && (\r\n+            <div className=\"modal is-active\">\r\n+               <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n+               <div className=\"modal-card\">\r\n+                  <header className=\"modal-card-head\">\r\n+                     <p className=\"modal-card-title\">Nuevo espacio de trabajo</p>\r\n+                     <button className=\"delete\" aria-label=\"close\" onClick={toggleModalOpen}></button>\r\n+                  </header>\r\n+                  <section className=\"modal-card-body\">\r\n+                     <div className=\"field\">\r\n+                        <label className=\"label\">Título</label>\r\n+                        <div className=\"control\">\r\n+                           <input className=\"input is-text\" type=\"text\" placeholder=\"Título del proyecto\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n+                        </div>\r\n+                     </div>\r\n+                     <div className=\"field\">\r\n+                        <label className=\"label\">Descripción</label>\r\n+                        <div className=\"control\">\r\n+                           <textarea className=\"textarea is-text\" placeholder=\"Descripción sobre el proyecto\" rows={2} value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n+                        </div>\r\n+                     </div>\r\n+                  </section>\r\n+                  <footer className=\"modal-card-foot\">\r\n+                     <div className=\"buttons\">\r\n+                        <button className=\"button is-success\" onClick={handleSave}>Guardar</button>\r\n+                        <button className=\"button\" onClick={toggleModalOpen}>Cancelar</button>\r\n+                     </div>\r\n+                  </footer>\r\n+               </div>\r\n+            </div>\r\n+         )}\r\n+      </div>\r\n+   )\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723581006379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,13 +58,22 @@\n          <div className='columns is-multiline'>\r\n             {spaces.map((space) => (\r\n                <div key={space.id} className='column is-one-quarter'>\r\n                   <div className='box' onClick={() => handleSpaceClick(space.id)}> {/* Manejar clic en el espacio */}\r\n-                     <div style={{ position: 'absolute', top: '10px', right: '10px' }}>\r\n-                        \r\n+                     <div className=\"buttons\" style={{ position: 'absolute', top: '10px', right: '10px' }}>\r\n+                        <button className=\"button is-small is-light\" onClick={() => handleEdit(space)}>\r\n+                           <span className=\"icon is-small\">\r\n+                           <i className=\"fas fa-edit\"></i>\r\n+                           </span>\r\n+                        </button>\r\n+                        <button className=\"button is-small is-danger\" onClick={() => handleDelete(space.id)}>\r\n+                           <span className=\"icon is-small\">\r\n+                           <i className=\"fas fa-trash\"></i>\r\n+                           </span>\r\n+                        </button>\r\n                         <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n                      </div>\r\n-                     \r\n+                     <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n \r\n                      <h2 className='title is-4'>{space.title}</h2>\r\n                      <p>{space.description}</p>\r\n                   </div>\r\n"
                },
                {
                    "date": 1723581014626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n          <div className='columns is-multiline'>\r\n             {spaces.map((space) => (\r\n                <div key={space.id} className='column is-one-quarter'>\r\n                   <div className='box' onClick={() => handleSpaceClick(space.id)}> {/* Manejar clic en el espacio */}\r\n-                     <div className=\"buttons\" style={{ position: 'absolute', top: '10px', right: '10px' }}>\r\n+                     <div >\r\n                         <button className=\"button is-small is-light\" onClick={() => handleEdit(space)}>\r\n                            <span className=\"icon is-small\">\r\n                            <i className=\"fas fa-edit\"></i>\r\n                            </span>\r\n@@ -114,123 +114,5 @@\n             </div>\r\n          )}\r\n       </div>\r\n    )\r\n-}\n-import React, { useState, useEffect } from 'react';\r\n-import axios from 'axios';\r\n-import { useNavigate } from 'react-router-dom';\r\n-\r\n-export const Spaces = () => {\r\n-   const [isModalOpen, setModalOpen] = useState(false);\r\n-   const toggleModalOpen = () => {\r\n-      setModalOpen(!isModalOpen);\r\n-   }\r\n-\r\n-   //SPACES\r\n-   const [title, setTitle] = useState('');\r\n-   const [description, setDescription] = useState('');\r\n-   const [spaces, setSpaces] = useState([]);\r\n-\r\n-   //BD\r\n-   const handleSave = async () => {\r\n-      const newSpace = { title, description };\r\n-\r\n-      try {\r\n-         await axios.post('http://localhost:3000/spaces', newSpace);\r\n-         setSpaces([...spaces, newSpace]); // Actualizar la lista de espacios\r\n-         toggleModalOpen(); // Cerrar el modal\r\n-      } catch (error) {\r\n-         console.error(\"Error guardando el espacio:\", error);\r\n-      }\r\n-   };\r\n-\r\n-   const fetchSpaces = async () => {\r\n-      try {\r\n-         const response = await axios.get('http://localhost:3000/spaces');\r\n-         setSpaces(response.data);\r\n-      } catch (error) {\r\n-         console.error(\"Error obteniendo los espacios:\", error);\r\n-      }\r\n-   };\r\n-\r\n-   useEffect(() => {\r\n-      fetchSpaces(); // Cargar espacios al montar el componente\r\n-   }, []);\r\n-\r\n-   //HOOK PARA LA NAVEGACION Y CLIC\r\n-   const navigate = useNavigate();\r\n-   const handleSpaceClick = (spaceId) => {\r\n-      navigate(`/tablero/${spaceId}`); // Navegar al tablero con el spaceId\r\n-   };\r\n-\r\n-   return (\r\n-      <div className='p-5'>\r\n-         <div className='box'>\r\n-            <div className=\"field\" style={{ textAlign: 'center' }}>\r\n-               <h1 className=\"subtitle\">Listado de proyectos / espacios de trabajo</h1>\r\n-               <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n-            </div>\r\n-         </div>\r\n-\r\n-         {/* Listar espacios guardados */}\r\n-         <div className='columns is-multiline'>\r\n-            {spaces.map((space) => (\r\n-               <div key={space.id} className='column is-one-quarter'>\r\n-                  <div className='box' onClick={() => handleSpaceClick(space.id)}> {/* Manejar clic en el espacio */}\r\n-                     <div style={{ position: 'absolute', top: '10px', right: '10px' }}>\r\n-                        <button className=\"button is-small is-light\" onClick={() => handleEdit(space)}>\r\n-                           <span className=\"icon is-small\">\r\n-                           <i className=\"fas fa-edit\"></i>\r\n-                           </span>\r\n-                        </button>\r\n-                        <button className=\"button is-small is-danger\" onClick={() => handleDelete(space.id)}>\r\n-                           <span className=\"icon is-small\">\r\n-                           <i className=\"fas fa-trash\"></i>\r\n-                           </span>\r\n-                        </button>\r\n-                        <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n-                     </div>\r\n-                     <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n-\r\n-                     <h2 className='title is-4'>{space.title}</h2>\r\n-                     <p>{space.description}</p>\r\n-                  </div>\r\n-               </div>\r\n-            ))}\r\n-         </div>\r\n-\r\n-\r\n-         {isModalOpen && (\r\n-            <div className=\"modal is-active\">\r\n-               <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n-               <div className=\"modal-card\">\r\n-                  <header className=\"modal-card-head\">\r\n-                     <p className=\"modal-card-title\">Nuevo espacio de trabajo</p>\r\n-                     <button className=\"delete\" aria-label=\"close\" onClick={toggleModalOpen}></button>\r\n-                  </header>\r\n-                  <section className=\"modal-card-body\">\r\n-                     <div className=\"field\">\r\n-                        <label className=\"label\">Título</label>\r\n-                        <div className=\"control\">\r\n-                           <input className=\"input is-text\" type=\"text\" placeholder=\"Título del proyecto\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n-                        </div>\r\n-                     </div>\r\n-                     <div className=\"field\">\r\n-                        <label className=\"label\">Descripción</label>\r\n-                        <div className=\"control\">\r\n-                           <textarea className=\"textarea is-text\" placeholder=\"Descripción sobre el proyecto\" rows={2} value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n-                        </div>\r\n-                     </div>\r\n-                  </section>\r\n-                  <footer className=\"modal-card-foot\">\r\n-                     <div className=\"buttons\">\r\n-                        <button className=\"button is-success\" onClick={handleSave}>Guardar</button>\r\n-                        <button className=\"button\" onClick={toggleModalOpen}>Cancelar</button>\r\n-                     </div>\r\n-                  </footer>\r\n-               </div>\r\n-            </div>\r\n-         )}\r\n-      </div>\r\n-   )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723581025436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,10 +71,8 @@\n                            </span>\r\n                         </button>\r\n                         <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n                      </div>\r\n-                     <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n-\r\n                      <h2 className='title is-4'>{space.title}</h2>\r\n                      <p>{space.description}</p>\r\n                   </div>\r\n                </div>\r\n"
                },
                {
                    "date": 1723581031578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,8 @@\n                            <span className=\"icon is-small\">\r\n                            <i className=\"fas fa-trash\"></i>\r\n                            </span>\r\n                         </button>\r\n-                        <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n                      </div>\r\n                      <h2 className='title is-4'>{space.title}</h2>\r\n                      <p>{space.description}</p>\r\n                   </div>\r\n"
                },
                {
                    "date": 1723581081971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,14 +61,14 @@\n                   <div className='box' onClick={() => handleSpaceClick(space.id)}> {/* Manejar clic en el espacio */}\r\n                      <div >\r\n                         <button className=\"button is-small is-light\" onClick={() => handleEdit(space)}>\r\n                            <span className=\"icon is-small\">\r\n-                           <i className=\"fas fa-edit\"></i>\r\n+                              <i className=\"fas fa-edit\"></i>\r\n                            </span>\r\n                         </button>\r\n                         <button className=\"button is-small is-danger\" onClick={() => handleDelete(space.id)}>\r\n-                           <span className=\"icon is-small\">\r\n-                           <i className=\"fas fa-trash\"></i>\r\n+                           <span class=\"icon\">\r\n+                              <i class=\"fas fa-home\"></i>\r\n                            </span>\r\n                         </button>\r\n                      </div>\r\n                      <h2 className='title is-4'>{space.title}</h2>\r\n"
                },
                {
                    "date": 1723581099943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,118 @@\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+import { useNavigate } from 'react-router-dom';\r\n+\r\n+export const Spaces = () => {\r\n+   const [isModalOpen, setModalOpen] = useState(false);\r\n+   const toggleModalOpen = () => {\r\n+      setModalOpen(!isModalOpen);\r\n+   }\r\n+\r\n+   //SPACES\r\n+   const [title, setTitle] = useState('');\r\n+   const [description, setDescription] = useState('');\r\n+   const [spaces, setSpaces] = useState([]);\r\n+\r\n+   //BD\r\n+   const handleSave = async () => {\r\n+      const newSpace = { title, description };\r\n+\r\n+      try {\r\n+         await axios.post('http://localhost:3000/spaces', newSpace);\r\n+         setSpaces([...spaces, newSpace]); // Actualizar la lista de espacios\r\n+         toggleModalOpen(); // Cerrar el modal\r\n+      } catch (error) {\r\n+         console.error(\"Error guardando el espacio:\", error);\r\n+      }\r\n+   };\r\n+\r\n+   const fetchSpaces = async () => {\r\n+      try {\r\n+         const response = await axios.get('http://localhost:3000/spaces');\r\n+         setSpaces(response.data);\r\n+      } catch (error) {\r\n+         console.error(\"Error obteniendo los espacios:\", error);\r\n+      }\r\n+   };\r\n+\r\n+   useEffect(() => {\r\n+      fetchSpaces(); // Cargar espacios al montar el componente\r\n+   }, []);\r\n+\r\n+   //HOOK PARA LA NAVEGACION Y CLIC\r\n+   const navigate = useNavigate();\r\n+   const handleSpaceClick = (spaceId) => {\r\n+      navigate(`/tablero/${spaceId}`); // Navegar al tablero con el spaceId\r\n+   };\r\n+\r\n+   return (\r\n+      <div className='p-5'>\r\n+         <div className='box'>\r\n+            <div className=\"field\" style={{ textAlign: 'center' }}>\r\n+               <h1 className=\"subtitle\">Listado de proyectos / espacios de trabajo</h1>\r\n+               <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n+            </div>\r\n+         </div>\r\n+\r\n+         {/* Listar espacios guardados */}\r\n+         <div className='columns is-multiline'>\r\n+            {spaces.map((space) => (\r\n+               <div key={space.id} className='column is-one-quarter'>\r\n+                  <div className='box' onClick={() => handleSpaceClick(space.id)}> {/* Manejar clic en el espacio */}\r\n+                     <div >\r\n+                        <button className=\"button is-small is-light\" onClick={() => handleEdit(space)}>\r\n+                           <span className=\"icon is-small\">\r\n+                              <i className=\"fas fa-edit\"></i>\r\n+                           </span>\r\n+                        </button>\r\n+                        <button className=\"button is-small is-danger\" onClick={() => handleDelete(space.id)}>\r\n+                           <span class=\"icon\">\r\n+                              <i class=\"fas fa-home\"></i>\r\n+                           </span>\r\n+                        </button>\r\n+                     </div>\r\n+                     <span class=\"icon\">\r\n+                        <i class=\"fas fa-home\"></i>\r\n+                     </span>\r\n+                     <h2 className='title is-4'>{space.title}</h2>\r\n+                     <p>{space.description}</p>\r\n+                  </div>\r\n+               </div>\r\n+            ))}\r\n+         </div>\r\n+\r\n+\r\n+         {isModalOpen && (\r\n+            <div className=\"modal is-active\">\r\n+               <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n+               <div className=\"modal-card\">\r\n+                  <header className=\"modal-card-head\">\r\n+                     <p className=\"modal-card-title\">Nuevo espacio de trabajo</p>\r\n+                     <button className=\"delete\" aria-label=\"close\" onClick={toggleModalOpen}></button>\r\n+                  </header>\r\n+                  <section className=\"modal-card-body\">\r\n+                     <div className=\"field\">\r\n+                        <label className=\"label\">Título</label>\r\n+                        <div className=\"control\">\r\n+                           <input className=\"input is-text\" type=\"text\" placeholder=\"Título del proyecto\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n+                        </div>\r\n+                     </div>\r\n+                     <div className=\"field\">\r\n+                        <label className=\"label\">Descripción</label>\r\n+                        <div className=\"control\">\r\n+                           <textarea className=\"textarea is-text\" placeholder=\"Descripción sobre el proyecto\" rows={2} value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n+                        </div>\r\n+                     </div>\r\n+                  </section>\r\n+                  <footer className=\"modal-card-foot\">\r\n+                     <div className=\"buttons\">\r\n+                        <button className=\"button is-success\" onClick={handleSave}>Guardar</button>\r\n+                        <button className=\"button\" onClick={toggleModalOpen}>Cancelar</button>\r\n+                     </div>\r\n+                  </footer>\r\n+               </div>\r\n+            </div>\r\n+         )}\r\n+      </div>\r\n+   )\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723581107906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,11 +70,9 @@\n                               <i class=\"fas fa-home\"></i>\r\n                            </span>\r\n                         </button>\r\n                      </div>\r\n-                     <span class=\"icon\">\r\n-                        <i class=\"fas fa-home\"></i>\r\n-                     </span>\r\n+                     \r\n                      <h2 className='title is-4'>{space.title}</h2>\r\n                      <p>{space.description}</p>\r\n                   </div>\r\n                </div>\r\n"
                },
                {
                    "date": 1723581240161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,8 @@\n                               <i class=\"fas fa-home\"></i>\r\n                            </span>\r\n                         </button>\r\n                      </div>\r\n-                     \r\n                      <h2 className='title is-4'>{space.title}</h2>\r\n                      <p>{space.description}</p>\r\n                   </div>\r\n                </div>\r\n@@ -112,120 +111,5 @@\n             </div>\r\n          )}\r\n       </div>\r\n    )\r\n-}\n-import React, { useState, useEffect } from 'react';\r\n-import axios from 'axios';\r\n-import { useNavigate } from 'react-router-dom';\r\n-\r\n-export const Spaces = () => {\r\n-   const [isModalOpen, setModalOpen] = useState(false);\r\n-   const toggleModalOpen = () => {\r\n-      setModalOpen(!isModalOpen);\r\n-   }\r\n-\r\n-   //SPACES\r\n-   const [title, setTitle] = useState('');\r\n-   const [description, setDescription] = useState('');\r\n-   const [spaces, setSpaces] = useState([]);\r\n-\r\n-   //BD\r\n-   const handleSave = async () => {\r\n-      const newSpace = { title, description };\r\n-\r\n-      try {\r\n-         await axios.post('http://localhost:3000/spaces', newSpace);\r\n-         setSpaces([...spaces, newSpace]); // Actualizar la lista de espacios\r\n-         toggleModalOpen(); // Cerrar el modal\r\n-      } catch (error) {\r\n-         console.error(\"Error guardando el espacio:\", error);\r\n-      }\r\n-   };\r\n-\r\n-   const fetchSpaces = async () => {\r\n-      try {\r\n-         const response = await axios.get('http://localhost:3000/spaces');\r\n-         setSpaces(response.data);\r\n-      } catch (error) {\r\n-         console.error(\"Error obteniendo los espacios:\", error);\r\n-      }\r\n-   };\r\n-\r\n-   useEffect(() => {\r\n-      fetchSpaces(); // Cargar espacios al montar el componente\r\n-   }, []);\r\n-\r\n-   //HOOK PARA LA NAVEGACION Y CLIC\r\n-   const navigate = useNavigate();\r\n-   const handleSpaceClick = (spaceId) => {\r\n-      navigate(`/tablero/${spaceId}`); // Navegar al tablero con el spaceId\r\n-   };\r\n-\r\n-   return (\r\n-      <div className='p-5'>\r\n-         <div className='box'>\r\n-            <div className=\"field\" style={{ textAlign: 'center' }}>\r\n-               <h1 className=\"subtitle\">Listado de proyectos / espacios de trabajo</h1>\r\n-               <button className=\"button is-primary is-rounded is-small\" onClick={toggleModalOpen} id=\"plus\"><span className='has-text-primary-20-invert'>+</span></button>\r\n-            </div>\r\n-         </div>\r\n-\r\n-         {/* Listar espacios guardados */}\r\n-         <div className='columns is-multiline'>\r\n-            {spaces.map((space) => (\r\n-               <div key={space.id} className='column is-one-quarter'>\r\n-                  <div className='box' onClick={() => handleSpaceClick(space.id)}> {/* Manejar clic en el espacio */}\r\n-                     <div >\r\n-                        <button className=\"button is-small is-light\" onClick={() => handleEdit(space)}>\r\n-                           <span className=\"icon is-small\">\r\n-                              <i className=\"fas fa-edit\"></i>\r\n-                           </span>\r\n-                        </button>\r\n-                        <button className=\"button is-small is-danger\" onClick={() => handleDelete(space.id)}>\r\n-                           <span class=\"icon\">\r\n-                              <i class=\"fas fa-home\"></i>\r\n-                           </span>\r\n-                        </button>\r\n-                     </div>\r\n-                     <h2 className='title is-4'>{space.title}</h2>\r\n-                     <p>{space.description}</p>\r\n-                  </div>\r\n-               </div>\r\n-            ))}\r\n-         </div>\r\n-\r\n-\r\n-         {isModalOpen && (\r\n-            <div className=\"modal is-active\">\r\n-               <div className=\"modal-background\" onClick={toggleModalOpen}></div>\r\n-               <div className=\"modal-card\">\r\n-                  <header className=\"modal-card-head\">\r\n-                     <p className=\"modal-card-title\">Nuevo espacio de trabajo</p>\r\n-                     <button className=\"delete\" aria-label=\"close\" onClick={toggleModalOpen}></button>\r\n-                  </header>\r\n-                  <section className=\"modal-card-body\">\r\n-                     <div className=\"field\">\r\n-                        <label className=\"label\">Título</label>\r\n-                        <div className=\"control\">\r\n-                           <input className=\"input is-text\" type=\"text\" placeholder=\"Título del proyecto\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n-                        </div>\r\n-                     </div>\r\n-                     <div className=\"field\">\r\n-                        <label className=\"label\">Descripción</label>\r\n-                        <div className=\"control\">\r\n-                           <textarea className=\"textarea is-text\" placeholder=\"Descripción sobre el proyecto\" rows={2} value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n-                        </div>\r\n-                     </div>\r\n-                  </section>\r\n-                  <footer className=\"modal-card-foot\">\r\n-                     <div className=\"buttons\">\r\n-                        <button className=\"button is-success\" onClick={handleSave}>Guardar</button>\r\n-                        <button className=\"button\" onClick={toggleModalOpen}>Cancelar</button>\r\n-                     </div>\r\n-                  </footer>\r\n-               </div>\r\n-            </div>\r\n-         )}\r\n-      </div>\r\n-   )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723581309139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import React, { useState, useEffect } from 'react';\r\n import axios from 'axios';\r\n import { useNavigate } from 'react-router-dom';\r\n+import '@fortawesome/fontawesome-free/css/all.min.css';\r\n \r\n export const Spaces = () => {\r\n    const [isModalOpen, setModalOpen] = useState(false);\r\n    const toggleModalOpen = () => {\r\n"
                },
                {
                    "date": 1723581334729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n                            </span>\r\n                         </button>\r\n                         <button className=\"button is-small is-danger\" onClick={() => handleDelete(space.id)}>\r\n                            <span class=\"icon\">\r\n-                              <i class=\"fas fa-home\"></i>\r\n+                              <i class=\"fas fa-trash\"></i>\r\n                            </span>\r\n                         </button>\r\n                      </div>\r\n                      <h2 className='title is-4'>{space.title}</h2>\r\n"
                },
                {
                    "date": 1723581351725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n             {spaces.map((space) => (\r\n                <div key={space.id} className='column is-one-quarter'>\r\n                   <div className='box' onClick={() => handleSpaceClick(space.id)}> {/* Manejar clic en el espacio */}\r\n                      <div >\r\n-                        <button className=\"button is-small is-light\" onClick={() => handleEdit(space)}>\r\n+                        <button className=\"button is-small is-dark\" onClick={() => handleEdit(space)}>\r\n                            <span className=\"icon is-small\">\r\n                               <i className=\"fas fa-edit\"></i>\r\n                            </span>\r\n                         </button>\r\n"
                },
                {
                    "date": 1723581364643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n                         <button className=\"button is-small is-dark\" onClick={() => handleEdit(space)}>\r\n                            <span className=\"icon is-small\">\r\n                               <i className=\"fas fa-edit\"></i>\r\n                            </span>\r\n-                        </button>\r\n+                        </button>&nbsp;\r\n                         <button className=\"button is-small is-danger\" onClick={() => handleDelete(space.id)}>\r\n                            <span class=\"icon\">\r\n                               <i class=\"fas fa-trash\"></i>\r\n                            </span>\r\n"
                },
                {
                    "date": 1723581381787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n             {spaces.map((space) => (\r\n                <div key={space.id} className='column is-one-quarter'>\r\n                   <div className='box' onClick={() => handleSpaceClick(space.id)}> {/* Manejar clic en el espacio */}\r\n                      <div >\r\n-                        <button className=\"button is-small is-dark\" onClick={() => handleEdit(space)}>\r\n+                        <button className=\"button is-small is-link\" onClick={() => handleEdit(space)}>\r\n                            <span className=\"icon is-small\">\r\n                               <i className=\"fas fa-edit\"></i>\r\n                            </span>\r\n                         </button>&nbsp;\r\n"
                },
                {
                    "date": 1723581402759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n          <div className='columns is-multiline'>\r\n             {spaces.map((space) => (\r\n                <div key={space.id} className='column is-one-quarter'>\r\n                   <div className='box' onClick={() => handleSpaceClick(space.id)}> {/* Manejar clic en el espacio */}\r\n-                     <div >\r\n+                     <div style={{ position: 'absolute', top: '10px', right: '10px' }}>\r\n                         <button className=\"button is-small is-info\" onClick={() => handleEdit(space)}>\r\n                            <span className=\"icon is-small\">\r\n                               <i className=\"fas fa-edit\"></i>\r\n                            </span>\r\n"
                },
                {
                    "date": 1723581493374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n                   <div className='box' onClick={() => handleSpaceClick(space.id)}> {/* Manejar clic en el espacio */}\r\n                      <div className='pb-3'>\r\n                         <button className=\"button is-small is-success\" onClick={() => handleEdit(space)}>\r\n                            <span className=\"icon is-small\">\r\n-                              <i className=\"fas fa-edit\"></i>\r\n+                              <i className=\"fas fa-eye\"></i>\r\n                            </span>\r\n                         </button>&nbsp;\r\n                         <button className=\"button is-small is-info\" onClick={() => handleEdit(space)}>\r\n                            <span className=\"icon is-small\">\r\n"
                }
            ],
            "date": 1723569382299,
            "name": "Commit-0",
            "content": ""
        }
    ]
}